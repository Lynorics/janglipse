/*
* generated by Xtext
*/
package de.lynorics.eclipse.jangaroo.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.lynorics.eclipse.jangaroo.services.AS3GrammarAccess;

public class AS3Parser extends AbstractContentAssistParser {
	
	@Inject
	private AS3GrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal.InternalAS3Parser createParser() {
		de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal.InternalAS3Parser result = new de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal.InternalAS3Parser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
					put(grammarAccess.getModelAccess().getMembersAlternatives_1_1_0(), "rule__Model__MembersAlternatives_1_1_0");
					put(grammarAccess.getModelAccess().getClassesAlternatives_1_2_0(), "rule__Model__ClassesAlternatives_1_2_0");
					put(grammarAccess.getPackageAccess().getMembersAlternatives_5_0(), "rule__Package__MembersAlternatives_5_0");
					put(grammarAccess.getPackageAccess().getClassesAlternatives_6_0(), "rule__Package__ClassesAlternatives_6_0");
					put(grammarAccess.getDirectiveAccess().getAlternatives_1(), "rule__Directive__Alternatives_1");
					put(grammarAccess.getUsesAccess().getAlternatives_3(), "rule__Uses__Alternatives_3");
					put(grammarAccess.getAnnotationFieldAccess().getNameAlternatives_0_0(), "rule__AnnotationField__NameAlternatives_0_0");
					put(grammarAccess.getInterfaceMethodAccess().getAlternatives_2_1(), "rule__InterfaceMethod__Alternatives_2_1");
					put(grammarAccess.getInterfaceMethodAccess().getAlternatives_2_4_1(), "rule__InterfaceMethod__Alternatives_2_4_1");
					put(grammarAccess.getAccessorRoleAccess().getAlternatives(), "rule__AccessorRole__Alternatives");
					put(grammarAccess.getMemberAccess().getAlternatives(), "rule__Member__Alternatives");
					put(grammarAccess.getMethodAccess().getAlternatives_3_1(), "rule__Method__Alternatives_3_1");
					put(grammarAccess.getMethodAccess().getAlternatives_3_4_1(), "rule__Method__Alternatives_3_4_1");
					put(grammarAccess.getMethodAccess().getAlternatives_3_5(), "rule__Method__Alternatives_3_5");
					put(grammarAccess.getVariableDeclarationAccess().getAlternatives_0(), "rule__VariableDeclaration__Alternatives_0");
					put(grammarAccess.getVariableDeclarationAccess().getAlternatives_2_1(), "rule__VariableDeclaration__Alternatives_2_1");
					put(grammarAccess.getParameterAccess().getAlternatives_3_1(), "rule__Parameter__Alternatives_3_1");
					put(grammarAccess.getFieldNameAccess().getAlternatives(), "rule__FieldName__Alternatives");
					put(grammarAccess.getExprOrObjectLiteralAccess().getAlternatives(), "rule__ExprOrObjectLiteral__Alternatives");
					put(grammarAccess.getIdentiAccess().getAlternatives(), "rule__Identi__Alternatives");
					put(grammarAccess.getPropertyIdentifierAccess().getAlternatives(), "rule__PropertyIdentifier__Alternatives");
					put(grammarAccess.getQualifierAccess().getAlternatives(), "rule__Qualifier__Alternatives");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getAlternatives(), "rule__SimpleQualifiedIdentifier__Alternatives");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getAlternatives_1_2(), "rule__SimpleQualifiedIdentifier__Alternatives_1_2");
					put(grammarAccess.getExpressionQualifiedIdentifierAccess().getAlternatives_2(), "rule__ExpressionQualifiedIdentifier__Alternatives_2");
					put(grammarAccess.getNonAttributeQualifiedIdentifierAccess().getAlternatives(), "rule__NonAttributeQualifiedIdentifier__Alternatives");
					put(grammarAccess.getQualifiedIdentifierAccess().getAlternatives(), "rule__QualifiedIdentifier__Alternatives");
					put(grammarAccess.getNamespaceNameAccess().getAlternatives(), "rule__NamespaceName__Alternatives");
					put(grammarAccess.getElementListAccess().getAlternatives(), "rule__ElementList__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getLogicalOrOperatorAccess().getAlternatives(), "rule__LogicalOrOperator__Alternatives");
					put(grammarAccess.getLogicalAndOperatorAccess().getAlternatives(), "rule__LogicalAndOperator__Alternatives");
					put(grammarAccess.getEqualityOperatorAccess().getAlternatives(), "rule__EqualityOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getShiftOperatorAccess().getAlternatives(), "rule__ShiftOperator__Alternatives");
					put(grammarAccess.getAdditiveOperatorAccess().getAlternatives(), "rule__AdditiveOperator__Alternatives");
					put(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives(), "rule__MultiplicativeOperator__Alternatives");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives(), "rule__UnaryExpressionNotPlusMinus__Alternatives");
					put(grammarAccess.getPostfixExpressionAccess().getAlternatives_1_1(), "rule__PostfixExpression__Alternatives_1_1");
					put(grammarAccess.getPostfixExpressionAccess().getAlternatives_1_2(), "rule__PostfixExpression__Alternatives_1_2");
					put(grammarAccess.getArgumentsAccess().getAlternatives_1(), "rule__Arguments__Alternatives_1");
					put(grammarAccess.getE4xAttributeIdentifierAccess().getAlternatives_2(), "rule__E4xAttributeIdentifier__Alternatives_2");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1(), "rule__PrimaryExpression__Alternatives_1");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives(), "rule__TerminalExpression__Alternatives");
					put(grammarAccess.getTerminalExpressionAccess().getValueAlternatives_4_1_0(), "rule__TerminalExpression__ValueAlternatives_4_1_0");
					put(grammarAccess.getTerminalExpressionAccess().getAlternatives_7_1(), "rule__TerminalExpression__Alternatives_7_1");
					put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
					put(grammarAccess.getNewExpressionAccess().getAlternatives_1(), "rule__NewExpression__Alternatives_1");
					put(grammarAccess.getFullNewSubexpressionAccess().getAlternatives_1(), "rule__FullNewSubexpression__Alternatives_1");
					put(grammarAccess.getTypeExpressionAccess().getAlternatives_2(), "rule__TypeExpression__Alternatives_2");
					put(grammarAccess.getParameterDeclarationAccess().getAlternatives(), "rule__ParameterDeclaration__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getTryStatementAccess().getAlternatives_2(), "rule__TryStatement__Alternatives_2");
					put(grammarAccess.getForStatementAccess().getAlternatives_2(), "rule__ForStatement__Alternatives_2");
					put(grammarAccess.getForInClauseDeclAccess().getAlternatives(), "rule__ForInClauseDecl__Alternatives");
					put(grammarAccess.getForInitAccess().getAlternatives_1(), "rule__ForInit__Alternatives_1");
					put(grammarAccess.getAccessLevelAccess().getAlternatives(), "rule__AccessLevel__Alternatives");
					put(grammarAccess.getModelAccess().getGroup_1(), "rule__Model__Group_1__0");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getImportsAccess().getGroup(), "rule__Imports__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getDirectiveAccess().getGroup(), "rule__Directive__Group__0");
					put(grammarAccess.getAnnotationAccess().getGroup(), "rule__Annotation__Group__0");
					put(grammarAccess.getAnnotationAccess().getGroup_2(), "rule__Annotation__Group_2__0");
					put(grammarAccess.getUsesAccess().getGroup(), "rule__Uses__Group__0");
					put(grammarAccess.getAnnotationFieldsAccess().getGroup(), "rule__AnnotationFields__Group__0");
					put(grammarAccess.getAnnotationFieldsAccess().getGroup_1(), "rule__AnnotationFields__Group_1__0");
					put(grammarAccess.getAnnotationFieldAccess().getGroup(), "rule__AnnotationField__Group__0");
					put(grammarAccess.getAnnotationFieldAccess().getGroup_1(), "rule__AnnotationField__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup_2(), "rule__Interface__Group_2__0");
					put(grammarAccess.getInterfaceAccess().getGroup_2_2(), "rule__Interface__Group_2_2__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup(), "rule__InterfaceMethod__Group__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup_2(), "rule__InterfaceMethod__Group_2__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup_2_1_0(), "rule__InterfaceMethod__Group_2_1_0__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup_2_1_1(), "rule__InterfaceMethod__Group_2_1_1__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup_2_2(), "rule__InterfaceMethod__Group_2_2__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup_2_2_1(), "rule__InterfaceMethod__Group_2_2_1__0");
					put(grammarAccess.getInterfaceMethodAccess().getGroup_2_4(), "rule__InterfaceMethod__Group_2_4__0");
					put(grammarAccess.getFunctionExpressionAccess().getGroup(), "rule__FunctionExpression__Group__0");
					put(grammarAccess.getFunctionCommonAccess().getGroup(), "rule__FunctionCommon__Group__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_2(), "rule__Class__Group_2__0");
					put(grammarAccess.getClassAccess().getGroup_2_2(), "rule__Class__Group_2_2__0");
					put(grammarAccess.getClassAccess().getGroup_2_3(), "rule__Class__Group_2_3__0");
					put(grammarAccess.getClassAccess().getGroup_2_3_2(), "rule__Class__Group_2_3_2__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_3(), "rule__Method__Group_3__0");
					put(grammarAccess.getMethodAccess().getGroup_3_1_0(), "rule__Method__Group_3_1_0__0");
					put(grammarAccess.getMethodAccess().getGroup_3_1_1(), "rule__Method__Group_3_1_1__0");
					put(grammarAccess.getMethodAccess().getGroup_3_2(), "rule__Method__Group_3_2__0");
					put(grammarAccess.getMethodAccess().getGroup_3_2_1(), "rule__Method__Group_3_2_1__0");
					put(grammarAccess.getMethodAccess().getGroup_3_4(), "rule__Method__Group_3_4__0");
					put(grammarAccess.getModifierAccess().getGroup(), "rule__Modifier__Group__0");
					put(grammarAccess.getMethodBodyAccess().getGroup(), "rule__MethodBody__Group__0");
					put(grammarAccess.getMemberVariableDeclarationAccess().getGroup(), "rule__MemberVariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_2(), "rule__VariableDeclaration__Group_2__0");
					put(grammarAccess.getVariableDeclarationAccess().getGroup_3(), "rule__VariableDeclaration__Group_3__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getParameterAccess().getGroup_3(), "rule__Parameter__Group_3__0");
					put(grammarAccess.getParameterAccess().getGroup_4(), "rule__Parameter__Group_4__0");
					put(grammarAccess.getObjectLiteralAccess().getGroup(), "rule__ObjectLiteral__Group__0");
					put(grammarAccess.getFieldListAccess().getGroup(), "rule__FieldList__Group__0");
					put(grammarAccess.getFieldListAccess().getGroup_1(), "rule__FieldList__Group_1__0");
					put(grammarAccess.getLiteralFieldAccess().getGroup(), "rule__LiteralField__Group__0");
					put(grammarAccess.getQualifiedIdentAccess().getGroup(), "rule__QualifiedIdent__Group__0");
					put(grammarAccess.getQualifiedIdentAccess().getGroup_0(), "rule__QualifiedIdent__Group_0__0");
					put(grammarAccess.getIdentiAccess().getGroup_0(), "rule__Identi__Group_0__0");
					put(grammarAccess.getIdentifierAccess().getGroup(), "rule__Identifier__Group__0");
					put(grammarAccess.getPropertyIdentifierAccess().getGroup_0(), "rule__PropertyIdentifier__Group_0__0");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getGroup_1(), "rule__SimpleQualifiedIdentifier__Group_1__0");
					put(grammarAccess.getExpressionQualifiedIdentifierAccess().getGroup(), "rule__ExpressionQualifiedIdentifier__Group__0");
					put(grammarAccess.getNamespaceNameAccess().getGroup_0(), "rule__NamespaceName__Group_0__0");
					put(grammarAccess.getArrayLiteralAccess().getGroup(), "rule__ArrayLiteral__Group__0");
					put(grammarAccess.getElementListAccess().getGroup_0(), "rule__ElementList__Group_0__0");
					put(grammarAccess.getNonemptyElementListAccess().getGroup(), "rule__NonemptyElementList__Group__0");
					put(grammarAccess.getNonemptyElementListAccess().getGroup_1(), "rule__NonemptyElementList__Group_1__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup(), "rule__AssignmentExpression__Group__0");
					put(grammarAccess.getAssignmentExpressionAccess().getGroup_1(), "rule__AssignmentExpression__Group_1__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup_1(), "rule__ConditionalExpression__Group_1__0");
					put(grammarAccess.getConditionalSubExpressionAccess().getGroup(), "rule__ConditionalSubExpression__Group__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup(), "rule__LogicalOrExpression__Group__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup_1(), "rule__LogicalOrExpression__Group_1__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup(), "rule__LogicalAndExpression__Group__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup_1(), "rule__LogicalAndExpression__Group_1__0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getGroup(), "rule__BitwiseOrExpression__Group__0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1(), "rule__BitwiseOrExpression__Group_1__0");
					put(grammarAccess.getBitwiseXorExpressionAccess().getGroup(), "rule__BitwiseXorExpression__Group__0");
					put(grammarAccess.getBitwiseXorExpressionAccess().getGroup_1(), "rule__BitwiseXorExpression__Group_1__0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getGroup(), "rule__BitwiseAndExpression__Group__0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1(), "rule__BitwiseAndExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup(), "rule__ShiftExpression__Group__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup_1(), "rule__ShiftExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_0(), "rule__UnaryExpression__Group_0__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_2(), "rule__UnaryExpression__Group_2__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_3(), "rule__UnaryExpression__Group_3__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_0(), "rule__UnaryExpressionNotPlusMinus__Group_0__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_1(), "rule__UnaryExpressionNotPlusMinus__Group_1__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_2(), "rule__UnaryExpressionNotPlusMinus__Group_2__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_3(), "rule__UnaryExpressionNotPlusMinus__Group_3__0");
					put(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getGroup_4(), "rule__UnaryExpressionNotPlusMinus__Group_4__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup(), "rule__PostfixExpression__Group__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1(), "rule__PostfixExpression__Group_1__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_1_1(), "rule__PostfixExpression__Group_1_1_1__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_1_2(), "rule__PostfixExpression__Group_1_1_2__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_1_3(), "rule__PostfixExpression__Group_1_1_3__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_1_4(), "rule__PostfixExpression__Group_1_1_4__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1_1_5(), "rule__PostfixExpression__Group_1_1_5__0");
					put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
					put(grammarAccess.getArgumentsAccess().getGroup_1_0(), "rule__Arguments__Group_1_0__0");
					put(grammarAccess.getArgumentsAccess().getGroup_1_1(), "rule__Arguments__Group_1_1__0");
					put(grammarAccess.getE4xAttributeIdentifierAccess().getGroup(), "rule__E4xAttributeIdentifier__Group__0");
					put(grammarAccess.getE4xAttributeIdentifierAccess().getGroup_2_2(), "rule__E4xAttributeIdentifier__Group_2_2__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup(), "rule__PrimaryExpression__Group__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_1_1(), "rule__PrimaryExpression__Group_1_1__0");
					put(grammarAccess.getPrimaryExpressionAccess().getGroup_1_1_1(), "rule__PrimaryExpression__Group_1_1_1__0");
					put(grammarAccess.getPropOrIdentAccess().getGroup(), "rule__PropOrIdent__Group__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_0(), "rule__TerminalExpression__Group_0__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_1(), "rule__TerminalExpression__Group_1__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_2(), "rule__TerminalExpression__Group_2__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_3(), "rule__TerminalExpression__Group_3__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_4(), "rule__TerminalExpression__Group_4__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_5(), "rule__TerminalExpression__Group_5__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_6(), "rule__TerminalExpression__Group_6__0");
					put(grammarAccess.getTerminalExpressionAccess().getGroup_7(), "rule__TerminalExpression__Group_7__0");
					put(grammarAccess.getNewExpressionAccess().getGroup(), "rule__NewExpression__Group__0");
					put(grammarAccess.getFullNewSubexpressionAccess().getGroup(), "rule__FullNewSubexpression__Group__0");
					put(grammarAccess.getFullNewSubexpressionAccess().getGroup_1_0(), "rule__FullNewSubexpression__Group_1_0__0");
					put(grammarAccess.getBracketsAccess().getGroup(), "rule__Brackets__Group__0");
					put(grammarAccess.getEncapsulatedExpressionAccess().getGroup(), "rule__EncapsulatedExpression__Group__0");
					put(grammarAccess.getFunctionSignatureAccess().getGroup(), "rule__FunctionSignature__Group__0");
					put(grammarAccess.getTypeExpressionAccess().getGroup(), "rule__TypeExpression__Group__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup(), "rule__ParameterDeclarationList__Group__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_2(), "rule__ParameterDeclarationList__Group_2__0");
					put(grammarAccess.getParameterDeclarationListAccess().getGroup_2_1(), "rule__ParameterDeclarationList__Group_2_1__0");
					put(grammarAccess.getBasicParameterDeclarationAccess().getGroup(), "rule__BasicParameterDeclaration__Group__0");
					put(grammarAccess.getParameterDefaultAccess().getGroup(), "rule__ParameterDefault__Group__0");
					put(grammarAccess.getParameterRestDeclarationAccess().getGroup(), "rule__ParameterRestDeclaration__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_17(), "rule__Statement__Group_17__0");
					put(grammarAccess.getDefaultXMLNamespaceStatementAccess().getGroup(), "rule__DefaultXMLNamespaceStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_3(), "rule__IfStatement__Group_3__0");
					put(grammarAccess.getThrowStatementAccess().getGroup(), "rule__ThrowStatement__Group__0");
					put(grammarAccess.getTryStatementAccess().getGroup(), "rule__TryStatement__Group__0");
					put(grammarAccess.getTryStatementAccess().getGroup_2_1(), "rule__TryStatement__Group_2_1__0");
					put(grammarAccess.getCatchBlockAccess().getGroup(), "rule__CatchBlock__Group__0");
					put(grammarAccess.getFinallyBlockAccess().getGroup(), "rule__FinallyBlock__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup(), "rule__SwitchStatement__Group__0");
					put(grammarAccess.getSwitchBlockAccess().getGroup(), "rule__SwitchBlock__Group__0");
					put(grammarAccess.getCaseStatementAccess().getGroup(), "rule__CaseStatement__Group__0");
					put(grammarAccess.getDefaultStatementAccess().getGroup(), "rule__DefaultStatement__Group__0");
					put(grammarAccess.getSwitchStatementListAccess().getGroup(), "rule__SwitchStatementList__Group__0");
					put(grammarAccess.getForEachStatementAccess().getGroup(), "rule__ForEachStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup_2_0(), "rule__ForStatement__Group_2_0__0");
					put(grammarAccess.getForStatementAccess().getGroup_2_1(), "rule__ForStatement__Group_2_1__0");
					put(grammarAccess.getTraditionalForClauseAccess().getGroup(), "rule__TraditionalForClause__Group__0");
					put(grammarAccess.getForInClauseAccess().getGroup(), "rule__ForInClause__Group__0");
					put(grammarAccess.getForInitAccess().getGroup(), "rule__ForInit__Group__0");
					put(grammarAccess.getForCondAccess().getGroup(), "rule__ForCond__Group__0");
					put(grammarAccess.getForIterAccess().getGroup(), "rule__ForIter__Group__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getDoWhileStatementAccess().getGroup(), "rule__DoWhileStatement__Group__0");
					put(grammarAccess.getWithStatementAccess().getGroup(), "rule__WithStatement__Group__0");
					put(grammarAccess.getModelAccess().getPackageAssignment_0(), "rule__Model__PackageAssignment_0");
					put(grammarAccess.getModelAccess().getImpAssignment_1_0(), "rule__Model__ImpAssignment_1_0");
					put(grammarAccess.getModelAccess().getMembersAssignment_1_1(), "rule__Model__MembersAssignment_1_1");
					put(grammarAccess.getModelAccess().getClassesAssignment_1_2(), "rule__Model__ClassesAssignment_1_2");
					put(grammarAccess.getPackageAccess().getNameAssignment_1(), "rule__Package__NameAssignment_1");
					put(grammarAccess.getPackageAccess().getImpAssignment_3(), "rule__Package__ImpAssignment_3");
					put(grammarAccess.getPackageAccess().getDirectivesAssignment_4(), "rule__Package__DirectivesAssignment_4");
					put(grammarAccess.getPackageAccess().getMembersAssignment_5(), "rule__Package__MembersAssignment_5");
					put(grammarAccess.getPackageAccess().getClassesAssignment_6(), "rule__Package__ClassesAssignment_6");
					put(grammarAccess.getImportsAccess().getImportsAssignment_1(), "rule__Imports__ImportsAssignment_1");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getDirectiveAccess().getUsesAssignment_1_0(), "rule__Directive__UsesAssignment_1_0");
					put(grammarAccess.getAnnotationAccess().getNameAssignment_1(), "rule__Annotation__NameAssignment_1");
					put(grammarAccess.getAnnotationAccess().getAnnonFieldsAssignment_2_1(), "rule__Annotation__AnnonFieldsAssignment_2_1");
					put(grammarAccess.getUsesAccess().getTypeAssignment_3_0(), "rule__Uses__TypeAssignment_3_0");
					put(grammarAccess.getAnnotationFieldsAccess().getAnnonFieldsAssignment_0(), "rule__AnnotationFields__AnnonFieldsAssignment_0");
					put(grammarAccess.getAnnotationFieldsAccess().getAnnonFieldsAssignment_1_1(), "rule__AnnotationFields__AnnonFieldsAssignment_1_1");
					put(grammarAccess.getAnnotationFieldAccess().getNameAssignment_0(), "rule__AnnotationField__NameAssignment_0");
					put(grammarAccess.getAnnotationFieldAccess().getExprAssignment_1_1(), "rule__AnnotationField__ExprAssignment_1_1");
					put(grammarAccess.getInterfaceAccess().getAnnotationsAssignment_0(), "rule__Interface__AnnotationsAssignment_0");
					put(grammarAccess.getInterfaceAccess().getAccessAssignment_1(), "rule__Interface__AccessAssignment_1");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_2_1(), "rule__Interface__NameAssignment_2_1");
					put(grammarAccess.getInterfaceAccess().getSuperclassAssignment_2_2_1(), "rule__Interface__SuperclassAssignment_2_2_1");
					put(grammarAccess.getInterfaceAccess().getMembersAssignment_2_4(), "rule__Interface__MembersAssignment_2_4");
					put(grammarAccess.getInterfaceMethodAccess().getAnnotationsAssignment_0(), "rule__InterfaceMethod__AnnotationsAssignment_0");
					put(grammarAccess.getInterfaceMethodAccess().getModifierAssignment_1(), "rule__InterfaceMethod__ModifierAssignment_1");
					put(grammarAccess.getInterfaceMethodAccess().getNameAssignment_2_1_0_0(), "rule__InterfaceMethod__NameAssignment_2_1_0_0");
					put(grammarAccess.getInterfaceMethodAccess().getAccessorAssignment_2_1_1_0(), "rule__InterfaceMethod__AccessorAssignment_2_1_1_0");
					put(grammarAccess.getInterfaceMethodAccess().getNameAssignment_2_1_1_1(), "rule__InterfaceMethod__NameAssignment_2_1_1_1");
					put(grammarAccess.getInterfaceMethodAccess().getParamsAssignment_2_2_0(), "rule__InterfaceMethod__ParamsAssignment_2_2_0");
					put(grammarAccess.getInterfaceMethodAccess().getParamsAssignment_2_2_1_1(), "rule__InterfaceMethod__ParamsAssignment_2_2_1_1");
					put(grammarAccess.getInterfaceMethodAccess().getTypeAssignment_2_4_1_2(), "rule__InterfaceMethod__TypeAssignment_2_4_1_2");
					put(grammarAccess.getInterfaceMethodAccess().getTypeAssignment_2_4_1_3(), "rule__InterfaceMethod__TypeAssignment_2_4_1_3");
					put(grammarAccess.getFunctionExpressionAccess().getNameAssignment_1(), "rule__FunctionExpression__NameAssignment_1");
					put(grammarAccess.getFunctionExpressionAccess().getFuncAssignment_2(), "rule__FunctionExpression__FuncAssignment_2");
					put(grammarAccess.getFunctionCommonAccess().getSigAssignment_0(), "rule__FunctionCommon__SigAssignment_0");
					put(grammarAccess.getFunctionCommonAccess().getBlockAssignment_1(), "rule__FunctionCommon__BlockAssignment_1");
					put(grammarAccess.getClassAccess().getAnnotationsAssignment_0(), "rule__Class__AnnotationsAssignment_0");
					put(grammarAccess.getClassAccess().getModifierAssignment_1(), "rule__Class__ModifierAssignment_1");
					put(grammarAccess.getClassAccess().getNameAssignment_2_1(), "rule__Class__NameAssignment_2_1");
					put(grammarAccess.getClassAccess().getSuperTypeAssignment_2_2_1(), "rule__Class__SuperTypeAssignment_2_2_1");
					put(grammarAccess.getClassAccess().getTypesAssignment_2_3_1(), "rule__Class__TypesAssignment_2_3_1");
					put(grammarAccess.getClassAccess().getTypesAssignment_2_3_2_1(), "rule__Class__TypesAssignment_2_3_2_1");
					put(grammarAccess.getClassAccess().getMembersAssignment_2_5(), "rule__Class__MembersAssignment_2_5");
					put(grammarAccess.getMemberAccess().getVarAssignment_0(), "rule__Member__VarAssignment_0");
					put(grammarAccess.getMemberAccess().getMethAssignment_1(), "rule__Member__MethAssignment_1");
					put(grammarAccess.getMethodAccess().getAnnotationsAssignment_0(), "rule__Method__AnnotationsAssignment_0");
					put(grammarAccess.getMethodAccess().getModifierAssignment_2(), "rule__Method__ModifierAssignment_2");
					put(grammarAccess.getMethodAccess().getNameAssignment_3_1_0_0(), "rule__Method__NameAssignment_3_1_0_0");
					put(grammarAccess.getMethodAccess().getAccessorAssignment_3_1_1_0(), "rule__Method__AccessorAssignment_3_1_1_0");
					put(grammarAccess.getMethodAccess().getNameAssignment_3_1_1_1(), "rule__Method__NameAssignment_3_1_1_1");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_2_0(), "rule__Method__ParamsAssignment_3_2_0");
					put(grammarAccess.getMethodAccess().getParamsAssignment_3_2_1_1(), "rule__Method__ParamsAssignment_3_2_1_1");
					put(grammarAccess.getMethodAccess().getTypeAssignment_3_4_1_2(), "rule__Method__TypeAssignment_3_4_1_2");
					put(grammarAccess.getMethodAccess().getTypeAssignment_3_4_1_3(), "rule__Method__TypeAssignment_3_4_1_3");
					put(grammarAccess.getMethodAccess().getBodyAssignment_3_5_0(), "rule__Method__BodyAssignment_3_5_0");
					put(grammarAccess.getModifierAccess().getStaticAssignment_1_0(), "rule__Modifier__StaticAssignment_1_0");
					put(grammarAccess.getModifierAccess().getFinalAssignment_1_1(), "rule__Modifier__FinalAssignment_1_1");
					put(grammarAccess.getModifierAccess().getNativeAssignment_1_2(), "rule__Modifier__NativeAssignment_1_2");
					put(grammarAccess.getModifierAccess().getDynamicAssignment_1_3(), "rule__Modifier__DynamicAssignment_1_3");
					put(grammarAccess.getModifierAccess().getAccessAssignment_1_4(), "rule__Modifier__AccessAssignment_1_4");
					put(grammarAccess.getMethodBodyAccess().getStatementsAssignment_2(), "rule__MethodBody__StatementsAssignment_2");
					put(grammarAccess.getMemberVariableDeclarationAccess().getModifierAssignment_0(), "rule__MemberVariableDeclaration__ModifierAssignment_0");
					put(grammarAccess.getMemberVariableDeclarationAccess().getDeclAssignment_1(), "rule__MemberVariableDeclaration__DeclAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getNameAssignment_1(), "rule__VariableDeclaration__NameAssignment_1");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_1_2(), "rule__VariableDeclaration__TypeAssignment_2_1_2");
					put(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_2_1_3(), "rule__VariableDeclaration__TypeAssignment_2_1_3");
					put(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_3_1(), "rule__VariableDeclaration__ExpressionAssignment_3_1");
					put(grammarAccess.getParameterAccess().getNameAssignment_2(), "rule__Parameter__NameAssignment_2");
					put(grammarAccess.getParameterAccess().getTypeAssignment_3_1_2(), "rule__Parameter__TypeAssignment_3_1_2");
					put(grammarAccess.getParameterAccess().getTypeAssignment_3_1_3(), "rule__Parameter__TypeAssignment_3_1_3");
					put(grammarAccess.getParameterAccess().getLitAssignment_4_1(), "rule__Parameter__LitAssignment_4_1");
					put(grammarAccess.getObjectLiteralAccess().getFieldsAssignment_2(), "rule__ObjectLiteral__FieldsAssignment_2");
					put(grammarAccess.getFieldListAccess().getLfAssignment_0(), "rule__FieldList__LfAssignment_0");
					put(grammarAccess.getFieldListAccess().getFieldsAssignment_1_1(), "rule__FieldList__FieldsAssignment_1_1");
					put(grammarAccess.getLiteralFieldAccess().getNameAssignment_0(), "rule__LiteralField__NameAssignment_0");
					put(grammarAccess.getLiteralFieldAccess().getElAssignment_2(), "rule__LiteralField__ElAssignment_2");
					put(grammarAccess.getFieldNameAccess().getNumberAssignment_1(), "rule__FieldName__NumberAssignment_1");
					put(grammarAccess.getQualifiedIdentAccess().getIdeAssignment_1(), "rule__QualifiedIdent__IdeAssignment_1");
					put(grammarAccess.getIdentiAccess().getIAssignment_1(), "rule__Identi__IAssignment_1");
					put(grammarAccess.getIdentiAccess().getIAssignment_2(), "rule__Identi__IAssignment_2");
					put(grammarAccess.getIdentiAccess().getIAssignment_3(), "rule__Identi__IAssignment_3");
					put(grammarAccess.getIdentiAccess().getIAssignment_4(), "rule__Identi__IAssignment_4");
					put(grammarAccess.getIdentiAccess().getIAssignment_5(), "rule__Identi__IAssignment_5");
					put(grammarAccess.getIdentiAccess().getIAssignment_6(), "rule__Identi__IAssignment_6");
					put(grammarAccess.getIdentiAccess().getIAssignment_7(), "rule__Identi__IAssignment_7");
					put(grammarAccess.getIdentiAccess().getIAssignment_8(), "rule__Identi__IAssignment_8");
					put(grammarAccess.getIdentifierAccess().getQualAssignment_0(), "rule__Identifier__QualAssignment_0");
					put(grammarAccess.getIdentifierAccess().getPoiAssignment_1(), "rule__Identifier__PoiAssignment_1");
					put(grammarAccess.getQualifierAccess().getLevelAssignment_1(), "rule__Qualifier__LevelAssignment_1");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getProIdAssignment_0(), "rule__SimpleQualifiedIdentifier__ProIdAssignment_0");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getQualAssignment_1_0(), "rule__SimpleQualifiedIdentifier__QualAssignment_1_0");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getPidenAssignment_1_2_0(), "rule__SimpleQualifiedIdentifier__PidenAssignment_1_2_0");
					put(grammarAccess.getSimpleQualifiedIdentifierAccess().getBraAssignment_1_2_1(), "rule__SimpleQualifiedIdentifier__BraAssignment_1_2_1");
					put(grammarAccess.getExpressionQualifiedIdentifierAccess().getPdenAssignment_2_0(), "rule__ExpressionQualifiedIdentifier__PdenAssignment_2_0");
					put(grammarAccess.getExpressionQualifiedIdentifierAccess().getBraAssignment_2_1(), "rule__ExpressionQualifiedIdentifier__BraAssignment_2_1");
					put(grammarAccess.getNamespaceNameAccess().getLevelAssignment_1(), "rule__NamespaceName__LevelAssignment_1");
					put(grammarAccess.getArrayLiteralAccess().getListAssignment_2(), "rule__ArrayLiteral__ListAssignment_2");
					put(grammarAccess.getNonemptyElementListAccess().getExprAssignment_1_1(), "rule__NonemptyElementList__ExprAssignment_1_1");
					put(grammarAccess.getExpressionListAccess().getExprAssignment_0(), "rule__ExpressionList__ExprAssignment_0");
					put(grammarAccess.getExpressionListAccess().getExprAssignment_1_1(), "rule__ExpressionList__ExprAssignment_1_1");
					put(grammarAccess.getAssignmentExpressionAccess().getOpAssignment_1_0(), "rule__AssignmentExpression__OpAssignment_1_0");
					put(grammarAccess.getAssignmentExpressionAccess().getAexprAssignment_1_1(), "rule__AssignmentExpression__AexprAssignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getCondAssignment_1_1(), "rule__ConditionalExpression__CondAssignment_1_1");
					put(grammarAccess.getConditionalSubExpressionAccess().getExpr1Assignment_0(), "rule__ConditionalSubExpression__Expr1Assignment_0");
					put(grammarAccess.getConditionalSubExpressionAccess().getExpr2Assignment_2(), "rule__ConditionalSubExpression__Expr2Assignment_2");
					put(grammarAccess.getLogicalOrExpressionAccess().getExprAssignment_0(), "rule__LogicalOrExpression__ExprAssignment_0");
					put(grammarAccess.getLogicalOrExpressionAccess().getOAssignment_1_0(), "rule__LogicalOrExpression__OAssignment_1_0");
					put(grammarAccess.getLogicalOrExpressionAccess().getExprAssignment_1_1(), "rule__LogicalOrExpression__ExprAssignment_1_1");
					put(grammarAccess.getLogicalAndExpressionAccess().getExprAssignment_0(), "rule__LogicalAndExpression__ExprAssignment_0");
					put(grammarAccess.getLogicalAndExpressionAccess().getOAssignment_1_0(), "rule__LogicalAndExpression__OAssignment_1_0");
					put(grammarAccess.getLogicalAndExpressionAccess().getExprAssignment_1_1(), "rule__LogicalAndExpression__ExprAssignment_1_1");
					put(grammarAccess.getBitwiseOrExpressionAccess().getExprAssignment_0(), "rule__BitwiseOrExpression__ExprAssignment_0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getOAssignment_1_0(), "rule__BitwiseOrExpression__OAssignment_1_0");
					put(grammarAccess.getBitwiseOrExpressionAccess().getExprAssignment_1_1(), "rule__BitwiseOrExpression__ExprAssignment_1_1");
					put(grammarAccess.getBitwiseXorExpressionAccess().getExprAssignment_0(), "rule__BitwiseXorExpression__ExprAssignment_0");
					put(grammarAccess.getBitwiseXorExpressionAccess().getOAssignment_1_0(), "rule__BitwiseXorExpression__OAssignment_1_0");
					put(grammarAccess.getBitwiseXorExpressionAccess().getExprAssignment_1_1(), "rule__BitwiseXorExpression__ExprAssignment_1_1");
					put(grammarAccess.getBitwiseAndExpressionAccess().getExprAssignment_0(), "rule__BitwiseAndExpression__ExprAssignment_0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getOAssignment_1_0(), "rule__BitwiseAndExpression__OAssignment_1_0");
					put(grammarAccess.getBitwiseAndExpressionAccess().getExprAssignment_1_1(), "rule__BitwiseAndExpression__ExprAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getExprAssignment_0(), "rule__EqualityExpression__ExprAssignment_0");
					put(grammarAccess.getEqualityExpressionAccess().getOAssignment_1_0(), "rule__EqualityExpression__OAssignment_1_0");
					put(grammarAccess.getEqualityExpressionAccess().getExprAssignment_1_1(), "rule__EqualityExpression__ExprAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getExprAssignment_0(), "rule__RelationalExpression__ExprAssignment_0");
					put(grammarAccess.getRelationalExpressionAccess().getOAssignment_1_0(), "rule__RelationalExpression__OAssignment_1_0");
					put(grammarAccess.getRelationalExpressionAccess().getExprAssignment_1_1(), "rule__RelationalExpression__ExprAssignment_1_1");
					put(grammarAccess.getShiftExpressionAccess().getExprAssignment_0(), "rule__ShiftExpression__ExprAssignment_0");
					put(grammarAccess.getShiftExpressionAccess().getOAssignment_1_0(), "rule__ShiftExpression__OAssignment_1_0");
					put(grammarAccess.getShiftExpressionAccess().getExprAssignment_1_1(), "rule__ShiftExpression__ExprAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getExprAssignment_0(), "rule__AdditiveExpression__ExprAssignment_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOAssignment_1_0(), "rule__AdditiveExpression__OAssignment_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getExprAssignment_1_1(), "rule__AdditiveExpression__ExprAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getExprAssignment_0(), "rule__MultiplicativeExpression__ExprAssignment_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOAssignment_1_0(), "rule__MultiplicativeExpression__OAssignment_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getExprAssignment_1_1(), "rule__MultiplicativeExpression__ExprAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getInAssignment_0_0(), "rule__UnaryExpression__InAssignment_0_0");
					put(grammarAccess.getUnaryExpressionAccess().getExprAssignment_0_1(), "rule__UnaryExpression__ExprAssignment_0_1");
					put(grammarAccess.getUnaryExpressionAccess().getDeAssignment_1_0(), "rule__UnaryExpression__DeAssignment_1_0");
					put(grammarAccess.getUnaryExpressionAccess().getExprAssignment_1_1(), "rule__UnaryExpression__ExprAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getUaemAssignment_2_1(), "rule__UnaryExpression__UaemAssignment_2_1");
					put(grammarAccess.getUnaryExpressionAccess().getUaepAssignment_3_1(), "rule__UnaryExpression__UaepAssignment_3_1");
					put(grammarAccess.getUnaryExpressionAccess().getUaenpmAssignment_4(), "rule__UnaryExpression__UaenpmAssignment_4");
					put(grammarAccess.getPostfixExpressionAccess().getPeexprAssignment_1_0(), "rule__PostfixExpression__PeexprAssignment_1_0");
					put(grammarAccess.getPostfixExpressionAccess().getPepoiAssignment_1_1_0(), "rule__PostfixExpression__PepoiAssignment_1_1_0");
					put(grammarAccess.getPostfixExpressionAccess().getExprAssignment_1_1_1_1(), "rule__PostfixExpression__ExprAssignment_1_1_1_1");
					put(grammarAccess.getPostfixExpressionAccess().getPewiAssignment_1_1_2_1(), "rule__PostfixExpression__PewiAssignment_1_1_2_1");
					put(grammarAccess.getPostfixExpressionAccess().getExprAssignment_1_1_3_2(), "rule__PostfixExpression__ExprAssignment_1_1_3_2");
					put(grammarAccess.getPostfixExpressionAccess().getE4xAssignment_1_1_4_1(), "rule__PostfixExpression__E4xAssignment_1_1_4_1");
					put(grammarAccess.getPostfixExpressionAccess().getArgsAssignment_1_1_6(), "rule__PostfixExpression__ArgsAssignment_1_1_6");
					put(grammarAccess.getPostfixExpressionAccess().getInAssignment_1_2_0(), "rule__PostfixExpression__InAssignment_1_2_0");
					put(grammarAccess.getPostfixExpressionAccess().getDeAssignment_1_2_1(), "rule__PostfixExpression__DeAssignment_1_2_1");
					put(grammarAccess.getArgumentsAccess().getExprListAssignment_1_0_1(), "rule__Arguments__ExprListAssignment_1_0_1");
					put(grammarAccess.getE4xAttributeIdentifierAccess().getQualAssignment_2_0(), "rule__E4xAttributeIdentifier__QualAssignment_2_0");
					put(grammarAccess.getE4xAttributeIdentifierAccess().getExprAssignment_2_2_1(), "rule__E4xAttributeIdentifier__ExprAssignment_2_2_1");
					put(grammarAccess.getPrimaryExpressionAccess().getSuperExprAssignment_1_1_1_1(), "rule__PrimaryExpression__SuperExprAssignment_1_1_1_1");
					put(grammarAccess.getPrimaryExpressionAccess().getConAssignment_1_2(), "rule__PrimaryExpression__ConAssignment_1_2");
					put(grammarAccess.getPrimaryExpressionAccess().getLitAssignment_1_3(), "rule__PrimaryExpression__LitAssignment_1_3");
					put(grammarAccess.getPrimaryExpressionAccess().getLitAssignment_1_4(), "rule__PrimaryExpression__LitAssignment_1_4");
					put(grammarAccess.getPrimaryExpressionAccess().getFexprAssignment_1_5(), "rule__PrimaryExpression__FexprAssignment_1_5");
					put(grammarAccess.getPrimaryExpressionAccess().getNexprAssignment_1_6(), "rule__PrimaryExpression__NexprAssignment_1_6");
					put(grammarAccess.getPrimaryExpressionAccess().getEncexprAssignment_1_7(), "rule__PrimaryExpression__EncexprAssignment_1_7");
					put(grammarAccess.getPrimaryExpressionAccess().getE4xAssignment_1_8(), "rule__PrimaryExpression__E4xAssignment_1_8");
					put(grammarAccess.getPrimaryExpressionAccess().getQualAssignment_1_9(), "rule__PrimaryExpression__QualAssignment_1_9");
					put(grammarAccess.getPropOrIdentAccess().getPropIdAssignment_1(), "rule__PropOrIdent__PropIdAssignment_1");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1(), "rule__TerminalExpression__ValueAssignment_0_1");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1(), "rule__TerminalExpression__ValueAssignment_1_1");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1(), "rule__TerminalExpression__ValueAssignment_2_1");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_3_1(), "rule__TerminalExpression__ValueAssignment_3_1");
					put(grammarAccess.getTerminalExpressionAccess().getValueAssignment_4_1(), "rule__TerminalExpression__ValueAssignment_4_1");
					put(grammarAccess.getTerminalExpressionAccess().getSymbolAssignment_7_1_0(), "rule__TerminalExpression__SymbolAssignment_7_1_0");
					put(grammarAccess.getTerminalExpressionAccess().getSymbolAssignment_7_1_1(), "rule__TerminalExpression__SymbolAssignment_7_1_1");
					put(grammarAccess.getRegexpLiteralAccess().getSAssignment(), "rule__RegexpLiteral__SAssignment");
					put(grammarAccess.getNewExpressionAccess().getTypeAssignment_1_0(), "rule__NewExpression__TypeAssignment_1_0");
					put(grammarAccess.getNewExpressionAccess().getTypeAssignment_1_1(), "rule__NewExpression__TypeAssignment_1_1");
					put(grammarAccess.getNewExpressionAccess().getArgsAssignment_2(), "rule__NewExpression__ArgsAssignment_2");
					put(grammarAccess.getFullNewSubexpressionAccess().getExprAssignment_0(), "rule__FullNewSubexpression__ExprAssignment_0");
					put(grammarAccess.getFullNewSubexpressionAccess().getFnsdAssignment_1_0_0(), "rule__FullNewSubexpression__FnsdAssignment_1_0_0");
					put(grammarAccess.getFullNewSubexpressionAccess().getQualiAssignment_1_0_1(), "rule__FullNewSubexpression__QualiAssignment_1_0_1");
					put(grammarAccess.getFullNewSubexpressionAccess().getBrackAssignment_1_1(), "rule__FullNewSubexpression__BrackAssignment_1_1");
					put(grammarAccess.getFunctionSignatureAccess().getParamAssignment_0(), "rule__FunctionSignature__ParamAssignment_0");
					put(grammarAccess.getFunctionSignatureAccess().getTypeAssignment_1(), "rule__FunctionSignature__TypeAssignment_1");
					put(grammarAccess.getTypeExpressionAccess().getIdentiAssignment_2_2(), "rule__TypeExpression__IdentiAssignment_2_2");
					put(grammarAccess.getTypeExpressionAccess().getIdentiAssignment_2_3(), "rule__TypeExpression__IdentiAssignment_2_3");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_2_0(), "rule__ParameterDeclarationList__ParamsAssignment_2_0");
					put(grammarAccess.getParameterDeclarationListAccess().getParamsAssignment_2_1_1(), "rule__ParameterDeclarationList__ParamsAssignment_2_1_1");
					put(grammarAccess.getBasicParameterDeclarationAccess().getNameAssignment_1(), "rule__BasicParameterDeclaration__NameAssignment_1");
					put(grammarAccess.getBasicParameterDeclarationAccess().getTypeAssignment_2(), "rule__BasicParameterDeclaration__TypeAssignment_2");
					put(grammarAccess.getBasicParameterDeclarationAccess().getParamAssignment_3(), "rule__BasicParameterDeclaration__ParamAssignment_3");
					put(grammarAccess.getParameterRestDeclarationAccess().getNameAssignment_2(), "rule__ParameterRestDeclaration__NameAssignment_2");
					put(grammarAccess.getBlockAccess().getStatementsAssignment_2(), "rule__Block__StatementsAssignment_2");
					put(grammarAccess.getStatementAccess().getAssertAssignment_17_1(), "rule__Statement__AssertAssignment_17_1");
					put(grammarAccess.getIfStatementAccess().getCondAssignment_1(), "rule__IfStatement__CondAssignment_1");
					put(grammarAccess.getIfStatementAccess().getStatementAssignment_2(), "rule__IfStatement__StatementAssignment_2");
					put(grammarAccess.getIfStatementAccess().getElseAssignment_3_1(), "rule__IfStatement__ElseAssignment_3_1");
					put(grammarAccess.getTryStatementAccess().getBlockAssignment_1(), "rule__TryStatement__BlockAssignment_1");
					put(grammarAccess.getTryStatementAccess().getFinallyAssignment_2_0(), "rule__TryStatement__FinallyAssignment_2_0");
					put(grammarAccess.getTryStatementAccess().getCatchAssignment_2_1_0(), "rule__TryStatement__CatchAssignment_2_1_0");
					put(grammarAccess.getTryStatementAccess().getFinallyAssignment_2_1_1(), "rule__TryStatement__FinallyAssignment_2_1_1");
					put(grammarAccess.getCatchBlockAccess().getTypeAssignment_3(), "rule__CatchBlock__TypeAssignment_3");
					put(grammarAccess.getCatchBlockAccess().getBlockAssignment_5(), "rule__CatchBlock__BlockAssignment_5");
					put(grammarAccess.getReturnStatementAccess().getExprAssignment_2(), "rule__ReturnStatement__ExprAssignment_2");
					put(grammarAccess.getSwitchStatementAccess().getSwitchAssignment_2(), "rule__SwitchStatement__SwitchAssignment_2");
					put(grammarAccess.getSwitchBlockAccess().getCaseAssignment_2(), "rule__SwitchBlock__CaseAssignment_2");
					put(grammarAccess.getSwitchBlockAccess().getDefAssignment_3(), "rule__SwitchBlock__DefAssignment_3");
					put(grammarAccess.getCaseStatementAccess().getLAssignment_3(), "rule__CaseStatement__LAssignment_3");
					put(grammarAccess.getDefaultStatementAccess().getLAssignment_2(), "rule__DefaultStatement__LAssignment_2");
					put(grammarAccess.getSwitchStatementListAccess().getStatementsAssignment_1(), "rule__SwitchStatementList__StatementsAssignment_1");
					put(grammarAccess.getForEachStatementAccess().getFesforAssignment_3(), "rule__ForEachStatement__FesforAssignment_3");
					put(grammarAccess.getForEachStatementAccess().getFesAssignment_5(), "rule__ForEachStatement__FesAssignment_5");
					put(grammarAccess.getForStatementAccess().getForInAssignment_2_0_0(), "rule__ForStatement__ForInAssignment_2_0_0");
					put(grammarAccess.getForStatementAccess().getFsstateAssignment_2_0_2(), "rule__ForStatement__FsstateAssignment_2_0_2");
					put(grammarAccess.getForStatementAccess().getTraditionalForClauseAssignment_2_1_0(), "rule__ForStatement__TraditionalForClauseAssignment_2_1_0");
					put(grammarAccess.getForStatementAccess().getFsstateAssignment_2_1_2(), "rule__ForStatement__FsstateAssignment_2_1_2");
					put(grammarAccess.getTraditionalForClauseAccess().getAAssignment_0(), "rule__TraditionalForClause__AAssignment_0");
					put(grammarAccess.getTraditionalForClauseAccess().getBAssignment_2(), "rule__TraditionalForClause__BAssignment_2");
					put(grammarAccess.getTraditionalForClauseAccess().getCAssignment_4(), "rule__TraditionalForClause__CAssignment_4");
					put(grammarAccess.getForInClauseAccess().getFicdeclAssignment_0(), "rule__ForInClause__FicdeclAssignment_0");
					put(grammarAccess.getForInClauseAccess().getFictailAssignment_2(), "rule__ForInClause__FictailAssignment_2");
					put(grammarAccess.getForInitAccess().getDeclAssignment_1_0(), "rule__ForInit__DeclAssignment_1_0");
					put(grammarAccess.getForInitAccess().getExprAssignment_1_1(), "rule__ForInit__ExprAssignment_1_1");
					put(grammarAccess.getForCondAccess().getExprAssignment_1(), "rule__ForCond__ExprAssignment_1");
					put(grammarAccess.getForIterAccess().getFiexprAssignment_1(), "rule__ForIter__FiexprAssignment_1");
					put(grammarAccess.getWhileStatementAccess().getCondAssignment_1(), "rule__WhileStatement__CondAssignment_1");
					put(grammarAccess.getWhileStatementAccess().getStatementAssignment_2(), "rule__WhileStatement__StatementAssignment_2");
					put(grammarAccess.getDoWhileStatementAccess().getStateAssignment_1(), "rule__DoWhileStatement__StateAssignment_1");
					put(grammarAccess.getDoWhileStatementAccess().getCondAssignment_3(), "rule__DoWhileStatement__CondAssignment_3");
					put(grammarAccess.getWithStatementAccess().getCondAssignment_1(), "rule__WithStatement__CondAssignment_1");
					put(grammarAccess.getWithStatementAccess().getStatementAssignment_2(), "rule__WithStatement__StatementAssignment_2");
					put(grammarAccess.getModifierAccess().getUnorderedGroup_1(), "rule__Modifier__UnorderedGroup_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal.InternalAS3Parser typedParser = (de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal.InternalAS3Parser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AS3GrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AS3GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}

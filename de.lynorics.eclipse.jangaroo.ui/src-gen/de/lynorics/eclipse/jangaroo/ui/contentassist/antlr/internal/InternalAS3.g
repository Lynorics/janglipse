/*
* generated by Xtext
*/
grammar InternalAS3;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.lynorics.eclipse.jangaroo.services.AS3GrammarAccess;

}

@parser::members {
 
 	private AS3GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AS3GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration 
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
(rule__PackageDeclaration__Group__0)
{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionScript
entryRuleActionScript 
:
{ before(grammarAccess.getActionScriptRule()); }
	 ruleActionScript
{ after(grammarAccess.getActionScriptRule()); } 
	 EOF 
;

// Rule ActionScript
ruleActionScript
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionScriptAccess().getGroup()); }
(rule__ActionScript__Group__0)
{ after(grammarAccess.getActionScriptAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibility
entryRuleVisibility 
:
{ before(grammarAccess.getVisibilityRule()); }
	 ruleVisibility
{ after(grammarAccess.getVisibilityRule()); } 
	 EOF 
;

// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariables
entryRuleVariables 
:
{ before(grammarAccess.getVariablesRule()); }
	 ruleVariables
{ after(grammarAccess.getVariablesRule()); } 
	 EOF 
;

// Rule Variables
ruleVariables
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariablesAccess().getAlternatives()); }
(rule__Variables__Alternatives)
{ after(grammarAccess.getVariablesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUNIT
entryRuleUNIT 
:
{ before(grammarAccess.getUNITRule()); }
	 ruleUNIT
{ after(grammarAccess.getUNITRule()); } 
	 EOF 
;

// Rule UNIT
ruleUNIT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUNITAccess().getGroup()); }
(rule__UNIT__Group__0)
{ after(grammarAccess.getUNITAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRule_String
entryRule_String 
:
{ before(grammarAccess.get_StringRule()); }
	 rule_String
{ after(grammarAccess.get_StringRule()); } 
	 EOF 
;

// Rule _String
rule_String
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.get_StringAccess().getGroup()); }
(rule___String__Group__0)
{ after(grammarAccess.get_StringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRule_int
entryRule_int 
:
{ before(grammarAccess.get_intRule()); }
	 rule_int
{ after(grammarAccess.get_intRule()); } 
	 EOF 
;

// Rule _int
rule_int
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.get_intAccess().getGroup()); }
(rule___int__Group__0)
{ after(grammarAccess.get_intAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenumber
entryRulenumber 
:
{ before(grammarAccess.getNumberRule()); }
	 rulenumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule number
rulenumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getGroup()); }
(rule__Number__Group__0)
{ after(grammarAccess.getNumberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageDeclarationParserRuleCall_0()); }
	rulePackageDeclaration
{ after(grammarAccess.getModelAccess().getPackageDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getActionScriptParserRuleCall_1()); }
	ruleActionScript
{ after(grammarAccess.getModelAccess().getActionScriptParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_0()); }
(rule__Type__Group_0__0)
{ after(grammarAccess.getTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getTypeAccess().getFunctionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVariablesParserRuleCall_2()); }
	ruleVariables
{ after(grammarAccess.getTypeAccess().getVariablesParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getGroup_0()); }
(rule__Property__Group_0__0)
{ after(grammarAccess.getPropertyAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getFunctionParserRuleCall_1()); }
	ruleFunction
{ after(grammarAccess.getPropertyAccess().getFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPublicKeyword_0()); }

	'public' 

{ after(grammarAccess.getVisibilityAccess().getPublicKeyword_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPrivateKeyword_1()); }

	'private' 

{ after(grammarAccess.getVisibilityAccess().getPrivateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getGroup_0()); }
(rule__Variables__Group_0__0)
{ after(grammarAccess.getVariablesAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getVariablesAccess().getGroup_1()); }
(rule__Variables__Group_1__0)
{ after(grammarAccess.getVariablesAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVariablesAccess().getGroup_2()); }
(rule__Variables__Group_2__0)
{ after(grammarAccess.getVariablesAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getVariablesAccess().getGroup_3()); }
(rule__Variables__Group_3__0)
{ after(grammarAccess.getVariablesAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__PackageDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
(rule__PackageDeclaration__NameAssignment_1)
{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElemntsAssignment_3()); }
(rule__PackageDeclaration__ElemntsAssignment_3)
{ after(grammarAccess.getPackageDeclarationAccess().getElemntsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActionScript__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionScript__Group__0__Impl
	rule__ActionScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionScript__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionScriptAccess().getImportsAssignment_0()); }
(rule__ActionScript__ImportsAssignment_0)*
{ after(grammarAccess.getActionScriptAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActionScript__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActionScript__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionScript__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getActionScriptAccess().getElementsAssignment_1()); }
(rule__ActionScript__ElementsAssignment_1)
{ after(grammarAccess.getActionScriptAccess().getElementsAssignment_1()); }
)
(
{ before(grammarAccess.getActionScriptAccess().getElementsAssignment_1()); }
(rule__ActionScript__ElementsAssignment_1)*
{ after(grammarAccess.getActionScriptAccess().getElementsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVisibilityParserRuleCall_0_0()); }
(	ruleVisibility)?
{ after(grammarAccess.getTypeAccess().getVisibilityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getClassParserRuleCall_0_1()); }
	ruleClass
{ after(grammarAccess.getTypeAccess().getClassParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__0__Impl
	rule__Property__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getVisibilityParserRuleCall_0_0()); }
(	ruleVisibility)?
{ after(grammarAccess.getPropertyAccess().getVisibilityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getVariablesParserRuleCall_0_1()); }
	ruleVariables
{ after(grammarAccess.getPropertyAccess().getVariablesParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2__0)?
{ after(grammarAccess.getClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
(rule__Class__PropertiesAssignment_4)*
{ after(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Class__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperClassAssignment_2_1()); }
(rule__Class__SuperClassAssignment_2_1)
{ after(grammarAccess.getClassAccess().getSuperClassAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
(rule__Function__NameAssignment_1)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Variables__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_0__0__Impl
	rule__Variables__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_0_0()); }

	'var' 

{ after(grammarAccess.getVariablesAccess().getVarKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getUNITParserRuleCall_0_1()); }
	ruleUNIT
{ after(grammarAccess.getVariablesAccess().getUNITParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variables__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_1__0__Impl
	rule__Variables__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_1_0()); }

	'var' 

{ after(grammarAccess.getVariablesAccess().getVarKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().get_StringParserRuleCall_1_1()); }
	rule_String
{ after(grammarAccess.getVariablesAccess().get_StringParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variables__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_2__0__Impl
	rule__Variables__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_2_0()); }

	'var' 

{ after(grammarAccess.getVariablesAccess().getVarKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().get_intParserRuleCall_2_1()); }
	rule_int
{ after(grammarAccess.getVariablesAccess().get_intParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variables__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_3__0__Impl
	rule__Variables__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarKeyword_3_0()); }

	'var' 

{ after(grammarAccess.getVariablesAccess().getVarKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getNumberParserRuleCall_3_1()); }
	rulenumber
{ after(grammarAccess.getVariablesAccess().getNumberParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UNIT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group__0__Impl
	rule__UNIT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getNameAssignment_0()); }
(rule__UNIT__NameAssignment_0)
{ after(grammarAccess.getUNITAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UNIT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group__1__Impl
	rule__UNIT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getUNITAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UNIT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group__2__Impl
	rule__UNIT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getUnitKeyword_2()); }

	'unit' 

{ after(grammarAccess.getUNITAccess().getUnitKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UNIT__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group__3__Impl
	rule__UNIT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getGroup_3()); }
(rule__UNIT__Group_3__0)?
{ after(grammarAccess.getUNITAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UNIT__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getUNITAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UNIT__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group_3__0__Impl
	rule__UNIT__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getUNITAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UNIT__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UNIT__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getStringAssignment_3_1()); }
(rule__UNIT__StringAssignment_3_1)
{ after(grammarAccess.getUNITAccess().getStringAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule___String__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group__0__Impl
	rule___String__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getNameAssignment_0()); }
(rule___String__NameAssignment_0)
{ after(grammarAccess.get_StringAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___String__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group__1__Impl
	rule___String__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.get_StringAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___String__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group__2__Impl
	rule___String__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getStringKeyword_2()); }

	'String' 

{ after(grammarAccess.get_StringAccess().getStringKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___String__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group__3__Impl
	rule___String__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getGroup_3()); }
(rule___String__Group_3__0)?
{ after(grammarAccess.get_StringAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___String__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.get_StringAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule___String__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group_3__0__Impl
	rule___String__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.get_StringAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___String__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___String__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule___String__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getStringAssignment_3_1()); }
(rule___String__StringAssignment_3_1)?
{ after(grammarAccess.get_StringAccess().getStringAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule___int__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group__0__Impl
	rule___int__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getNameAssignment_0()); }
(rule___int__NameAssignment_0)
{ after(grammarAccess.get_intAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___int__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group__1__Impl
	rule___int__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.get_intAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___int__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group__2__Impl
	rule___int__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getIntKeyword_2()); }

	'int' 

{ after(grammarAccess.get_intAccess().getIntKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___int__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group__3__Impl
	rule___int__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getGroup_3()); }
(rule___int__Group_3__0)?
{ after(grammarAccess.get_intAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___int__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.get_intAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule___int__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group_3__0__Impl
	rule___int__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.get_intAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule___int__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule___int__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule___int__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getIntAssignment_3_1()); }
(rule___int__IntAssignment_3_1)
{ after(grammarAccess.get_intAccess().getIntAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getNameAssignment_0()); }
(rule__Number__NameAssignment_0)
{ after(grammarAccess.getNumberAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__1__Impl
	rule__Number__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getNumberAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__2__Impl
	rule__Number__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getNumberKeyword_2()); }

	'Number' 

{ after(grammarAccess.getNumberAccess().getNumberKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__3__Impl
	rule__Number__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_3()); }
(rule__Number__Group_3__0)?
{ after(grammarAccess.getNumberAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getNumberAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Number__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_3__0__Impl
	rule__Number__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getNumberAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getDoubleAssignment_3_1()); }
(rule__Number__DoubleAssignment_3_1)
{ after(grammarAccess.getNumberAccess().getDoubleAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__PackageDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElemntsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDeclarationAccess().getElemntsActionScriptParserRuleCall_3_0()); }
	ruleActionScript{ after(grammarAccess.getPackageDeclarationAccess().getElemntsActionScriptParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionScript__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionScriptAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getActionScriptAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionScript__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionScriptAccess().getElementsTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getActionScriptAccess().getElementsTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIPackageDeclarationParserRuleCall_1_0()); }
	rulePackageDeclaration{ after(grammarAccess.getImportAccess().getImportURIPackageDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__SuperClassAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperClassClassCrossReference_2_1_0()); }
(
{ before(grammarAccess.getClassAccess().getSuperClassClassIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getSuperClassClassIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getSuperClassClassCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__PropertiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	ruleProperty{ after(grammarAccess.getClassAccess().getPropertiesPropertyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUNITAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UNIT__StringAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }
(
{ before(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }

	'0x000000' 

{ after(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }
)

{ after(grammarAccess.getUNITAccess().getString0x000000Keyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___String__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.get_StringAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___String__StringAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }
(
{ before(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }

	'' 

{ after(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }
)

{ after(grammarAccess.get_StringAccess().getStringKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___int__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.get_intAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule___int__IntAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }
(
{ before(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }

	'0' 

{ after(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }
)

{ after(grammarAccess.get_intAccess().getInt0Keyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getNumberAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__DoubleAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }
(
{ before(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }

	'0' 

{ after(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }
)

{ after(grammarAccess.getNumberAccess().getDouble0Keyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



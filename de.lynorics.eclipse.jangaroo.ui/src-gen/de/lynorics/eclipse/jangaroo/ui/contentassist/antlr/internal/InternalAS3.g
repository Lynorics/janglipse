/*
* generated by Xtext
*/
grammar InternalAS3;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.lynorics.eclipse.jangaroo.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.lynorics.eclipse.jangaroo.services.AS3GrammarAccess;

}

@parser::members {
 
 	private AS3GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AS3GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
}
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Model
ruleModel
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImports
entryRuleImports 
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportsAccess().getGroup()); }
(rule__Imports__Group__0)
{ after(grammarAccess.getImportsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledirective
entryRuledirective 
:
{ before(grammarAccess.getDirectiveRule()); }
	 ruledirective
{ after(grammarAccess.getDirectiveRule()); } 
	 EOF 
;

// Rule directive
ruledirective
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDirectiveAccess().getAlternatives()); }
(rule__Directive__Alternatives)
{ after(grammarAccess.getDirectiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUses
entryRuleUses 
:
{ before(grammarAccess.getUsesRule()); }
	 ruleUses
{ after(grammarAccess.getUsesRule()); } 
	 EOF 
;

// Rule Uses
ruleUses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesAccess().getGroup()); }
(rule__Uses__Group__0)
{ after(grammarAccess.getUsesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleannotationFields
entryRuleannotationFields 
:
{ before(grammarAccess.getAnnotationFieldsRule()); }
	 ruleannotationFields
{ after(grammarAccess.getAnnotationFieldsRule()); } 
	 EOF 
;

// Rule annotationFields
ruleannotationFields
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getGroup()); }
(rule__AnnotationFields__Group__0)
{ after(grammarAccess.getAnnotationFieldsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleannotationField
entryRuleannotationField 
:
{ before(grammarAccess.getAnnotationFieldRule()); }
	 ruleannotationField
{ after(grammarAccess.getAnnotationFieldRule()); } 
	 EOF 
;

// Rule annotationField
ruleannotationField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationFieldAccess().getGroup()); }
(rule__AnnotationField__Group__0)
{ after(grammarAccess.getAnnotationFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface
entryRuleInterface 
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceAccess().getGroup()); }
(rule__Interface__Group__0)
{ after(grammarAccess.getInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodBody
entryRuleMethodBody 
:
{ before(grammarAccess.getMethodBodyRule()); }
	 ruleMethodBody
{ after(grammarAccess.getMethodBodyRule()); } 
	 EOF 
;

// Rule MethodBody
ruleMethodBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodBodyAccess().getGroup()); }
(rule__MethodBody__Group__0)
{ after(grammarAccess.getMethodBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewStatement
entryRuleNewStatement 
:
{ before(grammarAccess.getNewStatementRule()); }
	 ruleNewStatement
{ after(grammarAccess.getNewStatementRule()); } 
	 EOF 
;

// Rule NewStatement
ruleNewStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewStatementAccess().getGroup()); }
(rule__NewStatement__Group__0)
{ after(grammarAccess.getNewStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getAlternatives()); }
(rule__ForStatement__Alternatives)
{ after(grammarAccess.getForStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleidentifierDeclaration
entryRuleidentifierDeclaration 
:
{ before(grammarAccess.getIdentifierDeclarationRule()); }
	 ruleidentifierDeclaration
{ after(grammarAccess.getIdentifierDeclarationRule()); } 
	 EOF 
;

// Rule identifierDeclaration
ruleidentifierDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getGroup()); }
(rule__IdentifierDeclaration__Group__0)
{ after(grammarAccess.getIdentifierDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecommaExpr
entryRulecommaExpr 
:
{ before(grammarAccess.getCommaExprRule()); }
	 rulecommaExpr
{ after(grammarAccess.getCommaExprRule()); } 
	 EOF 
;

// Rule commaExpr
rulecommaExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommaExprAccess().getGroup()); }
(rule__CommaExpr__Group__0)
{ after(grammarAccess.getCommaExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWhileStatement
entryRuleDoWhileStatement 
:
{ before(grammarAccess.getDoWhileStatementRule()); }
	 ruleDoWhileStatement
{ after(grammarAccess.getDoWhileStatementRule()); } 
	 EOF 
;

// Rule DoWhileStatement
ruleDoWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoWhileStatementAccess().getGroup()); }
(rule__DoWhileStatement__Group__0)
{ after(grammarAccess.getDoWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement 
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
(rule__SwitchStatement__Group__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparenthesizedExpr
entryRuleparenthesizedExpr 
:
{ before(grammarAccess.getParenthesizedExprRule()); }
	 ruleparenthesizedExpr
{ after(grammarAccess.getParenthesizedExprRule()); } 
	 EOF 
;

// Rule parenthesizedExpr
ruleparenthesizedExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExprAccess().getGroup()); }
(rule__ParenthesizedExpr__Group__0)
{ after(grammarAccess.getParenthesizedExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatementInSwitch
entryRulestatementInSwitch 
:
{ before(grammarAccess.getStatementInSwitchRule()); }
	 rulestatementInSwitch
{ after(grammarAccess.getStatementInSwitchRule()); } 
	 EOF 
;

// Rule statementInSwitch
rulestatementInSwitch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementInSwitchAccess().getAlternatives()); }
(rule__StatementInSwitch__Alternatives)
{ after(grammarAccess.getStatementInSwitchAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturn
entryRuleReturn 
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnAccess().getGroup()); }
(rule__Return__Group__0)
{ after(grammarAccess.getReturnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTryStatement
entryRuleTryStatement 
:
{ before(grammarAccess.getTryStatementRule()); }
	 ruleTryStatement
{ after(grammarAccess.getTryStatementRule()); } 
	 EOF 
;

// Rule TryStatement
ruleTryStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTryStatementAccess().getGroup()); }
(rule__TryStatement__Group__0)
{ after(grammarAccess.getTryStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfBlock
entryRuleIfBlock 
:
{ before(grammarAccess.getIfBlockRule()); }
	 ruleIfBlock
{ after(grammarAccess.getIfBlockRule()); } 
	 EOF 
;

// Rule IfBlock
ruleIfBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfBlockAccess().getAlternatives()); }
(rule__IfBlock__Alternatives)
{ after(grammarAccess.getIfBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementsBlock
entryRuleStatementsBlock 
:
{ before(grammarAccess.getStatementsBlockRule()); }
	 ruleStatementsBlock
{ after(grammarAccess.getStatementsBlockRule()); } 
	 EOF 
;

// Rule StatementsBlock
ruleStatementsBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementsBlockAccess().getGroup()); }
(rule__StatementsBlock__Group__0)
{ after(grammarAccess.getStatementsBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameters
entryRuleParameters 
:
{ before(grammarAccess.getParametersRule()); }
	 ruleParameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule Parameters
ruleParameters
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParametersAccess().getAlternatives()); }
(rule__Parameters__Alternatives)
{ after(grammarAccess.getParametersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletypeRelation
entryRuletypeRelation 
:
{ before(grammarAccess.getTypeRelationRule()); }
	 ruletypeRelation
{ after(grammarAccess.getTypeRelationRule()); } 
	 EOF 
;

// Rule typeRelation
ruletypeRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRelationAccess().getGroup()); }
(rule__TypeRelation__Group__0)
{ after(grammarAccess.getTypeRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleobjectLiteral
entryRuleobjectLiteral 
:
{ before(grammarAccess.getObjectLiteralRule()); }
	 ruleobjectLiteral
{ after(grammarAccess.getObjectLiteralRule()); } 
	 EOF 
;

// Rule objectLiteral
ruleobjectLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectLiteralAccess().getGroup()); }
(rule__ObjectLiteral__Group__0)
{ after(grammarAccess.getObjectLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleobjectFields
entryRuleobjectFields 
:
{ before(grammarAccess.getObjectFieldsRule()); }
	 ruleobjectFields
{ after(grammarAccess.getObjectFieldsRule()); } 
	 EOF 
;

// Rule objectFields
ruleobjectFields
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectFieldsAccess().getGroup()); }
(rule__ObjectFields__Group__0)
{ after(grammarAccess.getObjectFieldsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleobjectField
entryRuleobjectField 
:
{ before(grammarAccess.getObjectFieldRule()); }
	 ruleobjectField
{ after(grammarAccess.getObjectFieldRule()); } 
	 EOF 
;

// Rule objectField
ruleobjectField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectFieldAccess().getAlternatives()); }
(rule__ObjectField__Alternatives)
{ after(grammarAccess.getObjectFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexprOrObjectLiteral
entryRuleexprOrObjectLiteral 
:
{ before(grammarAccess.getExprOrObjectLiteralRule()); }
	 ruleexprOrObjectLiteral
{ after(grammarAccess.getExprOrObjectLiteralRule()); } 
	 EOF 
;

// Rule exprOrObjectLiteral
ruleexprOrObjectLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprOrObjectLiteralAccess().getAlternatives()); }
(rule__ExprOrObjectLiteral__Alternatives)
{ after(grammarAccess.getExprOrObjectLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall()); }
	ruleAssignment
{ after(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelectionExpression
entryRuleSelectionExpression 
:
{ before(grammarAccess.getSelectionExpressionRule()); }
	 ruleSelectionExpression
{ after(grammarAccess.getSelectionExpressionRule()); } 
	 EOF 
;

// Rule SelectionExpression
ruleSelectionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionExpressionAccess().getGroup()); }
(rule__SelectionExpression__Group__0)
{ after(grammarAccess.getSelectionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalOperator
entryRuleTerminalOperator 
:
{ before(grammarAccess.getTerminalOperatorRule()); }
	 ruleTerminalOperator
{ after(grammarAccess.getTerminalOperatorRule()); } 
	 EOF 
;

// Rule TerminalOperator
ruleTerminalOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalOperatorAccess().getAlternatives()); }
(rule__TerminalOperator__Alternatives)
{ after(grammarAccess.getTerminalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AccessLevel
ruleAccessLevel
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessLevelAccess().getAlternatives()); }
(rule__AccessLevel__Alternatives)
{ after(grammarAccess.getAccessLevelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getPackageParserRuleCall_0()); }
	rulePackage
{ after(grammarAccess.getModelAccess().getPackageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ClassesAlternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassesClassParserRuleCall_5_0_0()); }
	ruleClass
{ after(grammarAccess.getPackageAccess().getClassesClassParserRuleCall_5_0_0()); }
)

    |(
{ before(grammarAccess.getPackageAccess().getClassesInterfaceParserRuleCall_5_0_1()); }
	ruleInterface
{ after(grammarAccess.getPackageAccess().getClassesInterfaceParserRuleCall_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getGroup_0()); }
(rule__Directive__Group_0__0)
{ after(grammarAccess.getDirectiveAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDirectiveAccess().getUsesParserRuleCall_1()); }
	ruleUses
{ after(grammarAccess.getDirectiveAccess().getUsesParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDirectiveAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getDirectiveAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getTypeAssignment_2_0()); }
(rule__Uses__TypeAssignment_2_0)
{ after(grammarAccess.getUsesAccess().getTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getUsesAccess().getAsteriskKeyword_2_1()); }

	'*' 

{ after(grammarAccess.getUsesAccess().getAsteriskKeyword_2_1()); }
)

    |(
{ before(grammarAccess.getUsesAccess().getVoidKeyword_2_2()); }

	'void' 

{ after(grammarAccess.getUsesAccess().getVoidKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getVarAssignment_0()); }
(rule__Member__VarAssignment_0)
{ after(grammarAccess.getMemberAccess().getVarAssignment_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getMethAssignment_1()); }
(rule__Member__MethAssignment_1)
{ after(grammarAccess.getMemberAccess().getMethAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGetKeyword_5_0()); }

	'get' 

{ after(grammarAccess.getMethodAccess().getGetKeyword_5_0()); }
)

    |(
{ before(grammarAccess.getMethodAccess().getSetKeyword_5_1()); }

	'set' 

{ after(grammarAccess.getMethodAccess().getSetKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_0()); }
	ruleVariableDeclaration
{ after(grammarAccess.getStatementAccess().getVariableDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnParserRuleCall_1()); }
	ruleReturn
{ after(grammarAccess.getStatementAccess().getReturnParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_2()); }
(rule__Statement__Group_2__0)
{ after(grammarAccess.getStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_3()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_4()); }
	ruleSwitchStatement
{ after(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_5()); }
	ruleTryStatement
{ after(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_6()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoWhileStatementParserRuleCall_7()); }
	ruleDoWhileStatement
{ after(grammarAccess.getStatementAccess().getDoWhileStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_8()); }
	ruleForStatement
{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getNewStatementParserRuleCall_9()); }
	ruleNewStatement
{ after(grammarAccess.getStatementAccess().getNewStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getObjectLiteralParserRuleCall_10()); }
	ruleobjectLiteral
{ after(grammarAccess.getStatementAccess().getObjectLiteralParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getGroup_0()); }
(rule__ForStatement__Group_0__0)
{ after(grammarAccess.getForStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getForStatementAccess().getGroup_1()); }
(rule__ForStatement__Group_1__0)
{ after(grammarAccess.getForStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getForStatementAccess().getGroup_2()); }
(rule__ForStatement__Group_2__0)
{ after(grammarAccess.getForStatementAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getForStatementAccess().getGroup_3()); }
(rule__ForStatement__Group_3__0)
{ after(grammarAccess.getForStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementInSwitch__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementInSwitchAccess().getStatementParserRuleCall_0()); }
	ruleStatement
{ after(grammarAccess.getStatementInSwitchAccess().getStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementInSwitchAccess().getGroup_1()); }
(rule__StatementInSwitch__Group_1__0)
{ after(grammarAccess.getStatementInSwitchAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementInSwitchAccess().getGroup_2()); }
(rule__StatementInSwitch__Group_2__0)
{ after(grammarAccess.getStatementInSwitchAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfBlock__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfBlockAccess().getStatementsAssignment_0()); }
(rule__IfBlock__StatementsAssignment_0)
{ after(grammarAccess.getIfBlockAccess().getStatementsAssignment_0()); }
)

    |(
{ before(grammarAccess.getIfBlockAccess().getStatementsBlockParserRuleCall_1()); }
	ruleStatementsBlock
{ after(grammarAccess.getIfBlockAccess().getStatementsBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getGroup_0()); }
(rule__Parameters__Group_0__0)?
{ after(grammarAccess.getParametersAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getParametersAccess().getGroup_1()); }
(rule__Parameters__Group_1__0)
{ after(grammarAccess.getParametersAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getGroup_0()); }
(rule__ObjectField__Group_0__0)
{ after(grammarAccess.getObjectFieldAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getObjectFieldAccess().getGroup_1()); }
(rule__ObjectField__Group_1__0)
{ after(grammarAccess.getObjectFieldAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getObjectFieldAccess().getGroup_2()); }
(rule__ObjectField__Group_2__0)
{ after(grammarAccess.getObjectFieldAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprOrObjectLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprOrObjectLiteralAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getExprOrObjectLiteralAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExprOrObjectLiteralAccess().getObjectLiteralParserRuleCall_1()); }
	ruleobjectLiteral
{ after(grammarAccess.getExprOrObjectLiteralAccess().getObjectLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_5()); }
(rule__TerminalExpression__Group_5__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_6()); }
(rule__TerminalExpression__Group_6__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_7()); }
(rule__TerminalExpression__Group_7__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_8()); }
(rule__TerminalExpression__Group_8__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_9()); }
(rule__TerminalExpression__Group_9__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAlternatives_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueTrueKeyword_2_1_0_0()); }

	'true' 

{ after(grammarAccess.getTerminalExpressionAccess().getValueTrueKeyword_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getValueFalseKeyword_2_1_0_1()); }

	'false' 

{ after(grammarAccess.getTerminalExpressionAccess().getValueFalseKeyword_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalOperatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getTerminalOperatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getAsteriskEqualsSignKeyword_1()); }

	'*=' 

{ after(grammarAccess.getTerminalOperatorAccess().getAsteriskEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getSolidusEqualsSignKeyword_2()); }

	'/=' 

{ after(grammarAccess.getTerminalOperatorAccess().getSolidusEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getPercentSignEqualsSignKeyword_3()); }

	'%=' 

{ after(grammarAccess.getTerminalOperatorAccess().getPercentSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getPlusSignEqualsSignKeyword_4()); }

	'+=' 

{ after(grammarAccess.getTerminalOperatorAccess().getPlusSignEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); }

	'-=' 

{ after(grammarAccess.getTerminalOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); }

	'<<=' 

{ after(grammarAccess.getTerminalOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7()); }

	'>>=' 

{ after(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_8()); }

	'>>>=' 

{ after(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getAmpersandEqualsSignKeyword_9()); }

	'&=' 

{ after(grammarAccess.getTerminalOperatorAccess().getAmpersandEqualsSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getCircumflexAccentEqualsSignKeyword_10()); }

	'^=' 

{ after(grammarAccess.getTerminalOperatorAccess().getCircumflexAccentEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getVerticalLineEqualsSignKeyword_11()); }

	'|=' 

{ after(grammarAccess.getTerminalOperatorAccess().getVerticalLineEqualsSignKeyword_11()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getQuestionMarkColonKeyword_12()); }

	'?:' 

{ after(grammarAccess.getTerminalOperatorAccess().getQuestionMarkColonKeyword_12()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getVerticalLineVerticalLineKeyword_13()); }

	'||' 

{ after(grammarAccess.getTerminalOperatorAccess().getVerticalLineVerticalLineKeyword_13()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getAmpersandAmpersandKeyword_14()); }

	'&&' 

{ after(grammarAccess.getTerminalOperatorAccess().getAmpersandAmpersandKeyword_14()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getVerticalLineKeyword_15()); }

	'|' 

{ after(grammarAccess.getTerminalOperatorAccess().getVerticalLineKeyword_15()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getCircumflexAccentKeyword_16()); }

	'^' 

{ after(grammarAccess.getTerminalOperatorAccess().getCircumflexAccentKeyword_16()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getAmpersandKeyword_17()); }

	'&' 

{ after(grammarAccess.getTerminalOperatorAccess().getAmpersandKeyword_17()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getEqualsSignEqualsSignKeyword_18()); }

	'==' 

{ after(grammarAccess.getTerminalOperatorAccess().getEqualsSignEqualsSignKeyword_18()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getExclamationMarkEqualsSignKeyword_19()); }

	'!=' 

{ after(grammarAccess.getTerminalOperatorAccess().getExclamationMarkEqualsSignKeyword_19()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_20()); }

	'===' 

{ after(grammarAccess.getTerminalOperatorAccess().getEqualsSignEqualsSignEqualsSignKeyword_20()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_21()); }

	'!==' 

{ after(grammarAccess.getTerminalOperatorAccess().getExclamationMarkEqualsSignEqualsSignKeyword_21()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getLessThanSignKeyword_22()); }

	'<' 

{ after(grammarAccess.getTerminalOperatorAccess().getLessThanSignKeyword_22()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignKeyword_23()); }

	'>' 

{ after(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignKeyword_23()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getLessThanSignEqualsSignKeyword_24()); }

	'<=' 

{ after(grammarAccess.getTerminalOperatorAccess().getLessThanSignEqualsSignKeyword_24()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignEqualsSignKeyword_25()); }

	'>=' 

{ after(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignEqualsSignKeyword_25()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getAsKeyword_26()); }

	'as' 

{ after(grammarAccess.getTerminalOperatorAccess().getAsKeyword_26()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getInKeyword_27()); }

	'in' 

{ after(grammarAccess.getTerminalOperatorAccess().getInKeyword_27()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getInstanceofKeyword_28()); }

	'instanceof' 

{ after(grammarAccess.getTerminalOperatorAccess().getInstanceofKeyword_28()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getIsKeyword_29()); }

	'is' 

{ after(grammarAccess.getTerminalOperatorAccess().getIsKeyword_29()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getLessThanSignLessThanSignKeyword_30()); }

	'<<' 

{ after(grammarAccess.getTerminalOperatorAccess().getLessThanSignLessThanSignKeyword_30()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_31()); }

	'>>' 

{ after(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_31()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_32()); }

	'>>>' 

{ after(grammarAccess.getTerminalOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_32()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getPlusSignKeyword_33()); }

	'+' 

{ after(grammarAccess.getTerminalOperatorAccess().getPlusSignKeyword_33()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getHyphenMinusKeyword_34()); }

	'-' 

{ after(grammarAccess.getTerminalOperatorAccess().getHyphenMinusKeyword_34()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getAsteriskKeyword_35()); }

	'*' 

{ after(grammarAccess.getTerminalOperatorAccess().getAsteriskKeyword_35()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getSolidusKeyword_36()); }

	'/' 

{ after(grammarAccess.getTerminalOperatorAccess().getSolidusKeyword_36()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getPercentSignKeyword_37()); }

	'%' 

{ after(grammarAccess.getTerminalOperatorAccess().getPercentSignKeyword_37()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getPlusSignPlusSignKeyword_38()); }

	'++' 

{ after(grammarAccess.getTerminalOperatorAccess().getPlusSignPlusSignKeyword_38()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getHyphenMinusHyphenMinusKeyword_39()); }

	'--' 

{ after(grammarAccess.getTerminalOperatorAccess().getHyphenMinusHyphenMinusKeyword_39()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getExclamationMarkKeyword_40()); }

	'!' 

{ after(grammarAccess.getTerminalOperatorAccess().getExclamationMarkKeyword_40()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getTildeKeyword_41()); }

	'~' 

{ after(grammarAccess.getTerminalOperatorAccess().getTildeKeyword_41()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getTypeofKeyword_42()); }

	'typeof' 

{ after(grammarAccess.getTerminalOperatorAccess().getTypeofKeyword_42()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getFullStopKeyword_43()); }

	'.' 

{ after(grammarAccess.getTerminalOperatorAccess().getFullStopKeyword_43()); }
)

    |(
{ before(grammarAccess.getTerminalOperatorAccess().getColonColonKeyword_44()); }

	'::' 

{ after(grammarAccess.getTerminalOperatorAccess().getColonColonKeyword_44()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessLevel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessLevelAccess().getPRIVATEEnumLiteralDeclaration_0()); }
(	'private' 
)
{ after(grammarAccess.getAccessLevelAccess().getPRIVATEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAccessLevelAccess().getPUBLICEnumLiteralDeclaration_1()); }
(	'public' 
)
{ after(grammarAccess.getAccessLevelAccess().getPUBLICEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAccessLevelAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
(	'protected' 
)
{ after(grammarAccess.getAccessLevelAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAccessLevelAccess().getINTERNALEnumLiteralDeclaration_3()); }
(	'internal' 
)
{ after(grammarAccess.getAccessLevelAccess().getINTERNALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImpAssignment_1_0()); }
(rule__Model__ImpAssignment_1_0)
{ after(grammarAccess.getModelAccess().getImpAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClassesAssignment_1_1()); }
(rule__Model__ClassesAssignment_1_1)*
{ after(grammarAccess.getModelAccess().getClassesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageAssignment_1()); }
(rule__Package__PackageAssignment_1)
{ after(grammarAccess.getPackageAccess().getPackageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImpAssignment_3()); }
(rule__Package__ImpAssignment_3)
{ after(grammarAccess.getPackageAccess().getImpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getDirectivesAssignment_4()); }
(rule__Package__DirectivesAssignment_4)*
{ after(grammarAccess.getPackageAccess().getDirectivesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
	rule__Package__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassesAssignment_5()); }
(rule__Package__ClassesAssignment_5)*
{ after(grammarAccess.getPackageAccess().getClassesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Imports__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsAction_0()); }
(

)
{ after(grammarAccess.getImportsAccess().getImportsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsAssignment_1()); }
(rule__Imports__ImportsAssignment_1)*
{ after(grammarAccess.getImportsAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Directive__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0__0__Impl
	rule__Directive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getDirectiveAction_0_0()); }
(

)
{ after(grammarAccess.getDirectiveAccess().getDirectiveAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0__1__Impl
	rule__Directive__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getLeftSquareBracketKeyword_0_1()); }

	'[' 

{ after(grammarAccess.getDirectiveAccess().getLeftSquareBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0__2__Impl
	rule__Directive__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getNameAssignment_0_2()); }
(rule__Directive__NameAssignment_0_2)
{ after(grammarAccess.getDirectiveAccess().getNameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0__3__Impl
	rule__Directive__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getGroup_0_3()); }
(rule__Directive__Group_0_3__0)?
{ after(grammarAccess.getDirectiveAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getRightSquareBracketKeyword_0_4()); }

	']' 

{ after(grammarAccess.getDirectiveAccess().getRightSquareBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Directive__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0_3__0__Impl
	rule__Directive__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getLeftParenthesisKeyword_0_3_0()); }

	'(' 

{ after(grammarAccess.getDirectiveAccess().getLeftParenthesisKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0_3__1__Impl
	rule__Directive__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getAnnonFieldsAssignment_0_3_1()); }
(rule__Directive__AnnonFieldsAssignment_0_3_1)
{ after(grammarAccess.getDirectiveAccess().getAnnonFieldsAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Directive__Group_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Directive__Group_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__Group_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getRightParenthesisKeyword_0_3_2()); }

	')' 

{ after(grammarAccess.getDirectiveAccess().getRightParenthesisKeyword_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Uses__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__0__Impl
	rule__Uses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getUseKeyword_0()); }

	'use' 

{ after(grammarAccess.getUsesAccess().getUseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__1__Impl
	rule__Uses__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getNameAssignment_1()); }
(rule__Uses__NameAssignment_1)
{ after(grammarAccess.getUsesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Uses__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Uses__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getAlternatives_2()); }
(rule__Uses__Alternatives_2)
{ after(grammarAccess.getUsesAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationFields__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationFields__Group__0__Impl
	rule__AnnotationFields__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationFields__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getAnoonFieldsAssignment_0()); }
(rule__AnnotationFields__AnoonFieldsAssignment_0)
{ after(grammarAccess.getAnnotationFieldsAccess().getAnoonFieldsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationFields__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationFields__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationFields__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getGroup_1()); }
(rule__AnnotationFields__Group_1__0)*
{ after(grammarAccess.getAnnotationFieldsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationFields__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationFields__Group_1__0__Impl
	rule__AnnotationFields__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationFields__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getAnnotationFieldsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationFields__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationFields__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationFields__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getAnnonFieldsAssignment_1_1()); }
(rule__AnnotationFields__AnnonFieldsAssignment_1_1)
{ after(grammarAccess.getAnnotationFieldsAccess().getAnnonFieldsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationField__Group__0__Impl
	rule__AnnotationField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldAccess().getNameAssignment_0()); }
(rule__AnnotationField__NameAssignment_0)
{ after(grammarAccess.getAnnotationFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationField__Group__1__Impl
	rule__AnnotationField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAnnotationFieldAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldAccess().getExprAssignment_2()); }
(rule__AnnotationField__ExprAssignment_2)
{ after(grammarAccess.getAnnotationFieldAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Interface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAccessAssignment_0()); }
(rule__Interface__AccessAssignment_0)?
{ after(grammarAccess.getInterfaceAccess().getAccessAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_1()); }

	'interface' 

{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameAssignment_2()); }
(rule__Interface__NameAssignment_2)
{ after(grammarAccess.getInterfaceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getGroup_3()); }
(rule__Interface__Group_3__0)?
{ after(grammarAccess.getInterfaceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__4__Impl
	rule__Interface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__5__Impl
	rule__Interface__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMembersAssignment_5()); }
(rule__Interface__MembersAssignment_5)*
{ after(grammarAccess.getInterfaceAccess().getMembersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Interface__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__0__Impl
	rule__Interface__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getInterfaceAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getSuperclassAssignment_3_1()); }
(rule__Interface__SuperclassAssignment_3_1)
{ after(grammarAccess.getInterfaceAccess().getSuperclassAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAccessAssignment_0()); }
(rule__Class__AccessAssignment_0)?
{ after(grammarAccess.getClassAccess().getAccessAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getStaticKeyword_1()); }
(
	'static' 
)?
{ after(grammarAccess.getClassAccess().getStaticKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_3()); }
(rule__Class__NameAssignment_3)
{ after(grammarAccess.getClassAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_4()); }
(rule__Class__Group_4__0)?
{ after(grammarAccess.getClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
	rule__Class__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_5()); }
(rule__Class__Group_5__0)?
{ after(grammarAccess.getClassAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__6__Impl
	rule__Class__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__7__Impl
	rule__Class__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersAssignment_7()); }
(rule__Class__MembersAssignment_7)*
{ after(grammarAccess.getClassAccess().getMembersAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Class__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__0__Impl
	rule__Class__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperTypeAssignment_4_1()); }
(rule__Class__SuperTypeAssignment_4_1)
{ after(grammarAccess.getClassAccess().getSuperTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5__0__Impl
	rule__Class__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getImplementsKeyword_5_0()); }

	'implements' 

{ after(grammarAccess.getClassAccess().getImplementsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5__1__Impl
	rule__Class__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypesAssignment_5_1()); }
(rule__Class__TypesAssignment_5_1)
{ after(grammarAccess.getClassAccess().getTypesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_5_2()); }
(rule__Class__Group_5_2__0)*
{ after(grammarAccess.getClassAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5_2__0__Impl
	rule__Class__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getClassAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypesAssignment_5_2_1()); }
(rule__Class__TypesAssignment_5_2_1)
{ after(grammarAccess.getClassAccess().getTypesAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getOverrideKeyword_0()); }
(
	'override' 
)?
{ after(grammarAccess.getMethodAccess().getOverrideKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAccessAssignment_1()); }
(rule__Method__AccessAssignment_1)?
{ after(grammarAccess.getMethodAccess().getAccessAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNativeKeyword_2()); }
(
	'native' 
)?
{ after(grammarAccess.getMethodAccess().getNativeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getStaticKeyword_3()); }
(
	'static' 
)?
{ after(grammarAccess.getMethodAccess().getStaticKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getFunctionKeyword_4()); }

	'function' 

{ after(grammarAccess.getMethodAccess().getFunctionKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAlternatives_5()); }
(rule__Method__Alternatives_5)?
{ after(grammarAccess.getMethodAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_6()); }
(rule__Method__NameAssignment_6)
{ after(grammarAccess.getMethodAccess().getNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
	rule__Method__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__8__Impl
	rule__Method__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_8()); }
(rule__Method__Group_8__0)?
{ after(grammarAccess.getMethodAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__9__Impl
	rule__Method__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__10__Impl
	rule__Method__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_10()); }
(rule__Method__Group_10__0)?
{ after(grammarAccess.getMethodAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyAssignment_11()); }
(rule__Method__BodyAssignment_11)
{ after(grammarAccess.getMethodAccess().getBodyAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Method__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_8__0__Impl
	rule__Method__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_8_0()); }
(rule__Method__ParamsAssignment_8_0)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_8_1()); }
(rule__Method__Group_8_1__0)*
{ after(grammarAccess.getMethodAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_8_1__0__Impl
	rule__Method__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_8_1_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_8_1_1()); }
(rule__Method__ParamsAssignment_8_1_1)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_10__0__Impl
	rule__Method__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getColonKeyword_10_0()); }

	':' 

{ after(grammarAccess.getMethodAccess().getColonKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_10_1()); }
(rule__Method__TypeAssignment_10_1)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__0__Impl
	rule__MethodBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getMethodBodyAction_0()); }
(

)
{ after(grammarAccess.getMethodBodyAccess().getMethodBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__1__Impl
	rule__MethodBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMethodBodyAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__2__Impl
	rule__MethodBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getStatementsAssignment_2()); }
(rule__MethodBody__StatementsAssignment_2)*
{ after(grammarAccess.getMethodBodyAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getMethodBodyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__0__Impl
	rule__Statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2_0()); }
	ruleExpression
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NewStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group__0__Impl
	rule__NewStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getNewAction_0()); }
(

)
{ after(grammarAccess.getNewStatementAccess().getNewAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group__1__Impl
	rule__NewStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getNewKeyword_1()); }

	'new' 

{ after(grammarAccess.getNewStatementAccess().getNewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group__2__Impl
	rule__NewStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getTypeAssignment_2()); }
(rule__NewStatement__TypeAssignment_2)
{ after(grammarAccess.getNewStatementAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getGroup_3()); }
(rule__NewStatement__Group_3__0)?
{ after(grammarAccess.getNewStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NewStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group_3__0__Impl
	rule__NewStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getNewStatementAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group_3__1__Impl
	rule__NewStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getParamAssignment_3_1()); }
(rule__NewStatement__ParamAssignment_3_1)?
{ after(grammarAccess.getNewStatementAccess().getParamAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewStatement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewStatement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getNewStatementAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__0__Impl
	rule__ForStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__1__Impl
	rule__ForStatement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__2__Impl
	rule__ForStatement__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForinitAssignment_0_2()); }
(rule__ForStatement__ForinitAssignment_0_2)?
{ after(grammarAccess.getForStatementAccess().getForinitAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__3__Impl
	rule__ForStatement__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_0_3()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__4__Impl
	rule__ForStatement__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getConditionAssignment_0_4()); }
(rule__ForStatement__ConditionAssignment_0_4)?
{ after(grammarAccess.getForStatementAccess().getConditionAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__5__Impl
	rule__ForStatement__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_0_5()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__6__Impl
	rule__ForStatement__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIteratorAssignment_0_6()); }
(rule__ForStatement__IteratorAssignment_0_6)?
{ after(grammarAccess.getForStatementAccess().getIteratorAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__7__Impl
	rule__ForStatement__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_0_7()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_0__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCommandAssignment_0_8()); }
(rule__ForStatement__CommandAssignment_0_8)
{ after(grammarAccess.getForStatementAccess().getCommandAssignment_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ForStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__0__Impl
	rule__ForStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_1_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__1__Impl
	rule__ForStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__2__Impl
	rule__ForStatement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVarKeyword_1_2()); }

	'var' 

{ after(grammarAccess.getForStatementAccess().getVarKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__3__Impl
	rule__ForStatement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getElementsAssignment_1_3()); }
(rule__ForStatement__ElementsAssignment_1_3)
{ after(grammarAccess.getForStatementAccess().getElementsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__4__Impl
	rule__ForStatement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getGroup_1_4()); }
(rule__ForStatement__Group_1_4__0)*
{ after(grammarAccess.getForStatementAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__5__Impl
	rule__ForStatement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_5()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__6__Impl
	rule__ForStatement__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getConditionAssignment_1_6()); }
(rule__ForStatement__ConditionAssignment_1_6)?
{ after(grammarAccess.getForStatementAccess().getConditionAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__7__Impl
	rule__ForStatement__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_7()); }

	';' 

{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__8__Impl
	rule__ForStatement__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIteratorAssignment_1_8()); }
(rule__ForStatement__IteratorAssignment_1_8)?
{ after(grammarAccess.getForStatementAccess().getIteratorAssignment_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__9__Impl
	rule__ForStatement__Group_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_1_9()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCommandAssignment_1_10()); }
(rule__ForStatement__CommandAssignment_1_10)
{ after(grammarAccess.getForStatementAccess().getCommandAssignment_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ForStatement__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1_4__0__Impl
	rule__ForStatement__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCommaKeyword_1_4_0()); }

	',' 

{ after(grammarAccess.getForStatementAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getElementsAssignment_1_4_1()); }
(rule__ForStatement__ElementsAssignment_1_4_1)
{ after(grammarAccess.getForStatementAccess().getElementsAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__0__Impl
	rule__ForStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__1__Impl
	rule__ForStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getEachKeyword_2_1()); }
(
	'each' 
)?
{ after(grammarAccess.getForStatementAccess().getEachKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__2__Impl
	rule__ForStatement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2_2()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__3__Impl
	rule__ForStatement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getNameForinAssignment_2_3()); }
(rule__ForStatement__NameForinAssignment_2_3)
{ after(grammarAccess.getForStatementAccess().getNameForinAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__4__Impl
	rule__ForStatement__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInKeyword_2_4()); }

	'in' 

{ after(grammarAccess.getForStatementAccess().getInKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__5__Impl
	rule__ForStatement__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForinexprAssignment_2_5()); }
(rule__ForStatement__ForinexprAssignment_2_5)
{ after(grammarAccess.getForStatementAccess().getForinexprAssignment_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__6__Impl
	rule__ForStatement__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_2_6()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_2_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_2__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_2__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_2__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForcommandAssignment_2_7()); }
(rule__ForStatement__ForcommandAssignment_2_7)
{ after(grammarAccess.getForStatementAccess().getForcommandAssignment_2_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ForStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__0__Impl
	rule__ForStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_3_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__1__Impl
	rule__ForStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getEachKeyword_3_1()); }
(
	'each' 
)?
{ after(grammarAccess.getForStatementAccess().getEachKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__2__Impl
	rule__ForStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_3_2()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__3__Impl
	rule__ForStatement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVarKeyword_3_3()); }

	'var' 

{ after(grammarAccess.getForStatementAccess().getVarKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__4__Impl
	rule__ForStatement__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getNameForeachhAssignment_3_4()); }
(rule__ForStatement__NameForeachhAssignment_3_4)
{ after(grammarAccess.getForStatementAccess().getNameForeachhAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__5__Impl
	rule__ForStatement__Group_3__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRelationAssignment_3_5()); }
(rule__ForStatement__RelationAssignment_3_5)?
{ after(grammarAccess.getForStatementAccess().getRelationAssignment_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__6__Impl
	rule__ForStatement__Group_3__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getInKeyword_3_6()); }

	'in' 

{ after(grammarAccess.getForStatementAccess().getInKeyword_3_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__7__Impl
	rule__ForStatement__Group_3__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForeachexprAssignment_3_7()); }
(rule__ForStatement__ForeachexprAssignment_3_7)
{ after(grammarAccess.getForStatementAccess().getForeachexprAssignment_3_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__8__Impl
	rule__ForStatement__Group_3__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_8()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_3_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForeachcommandAssignment_3_9()); }
(rule__ForStatement__ForeachcommandAssignment_3_9)
{ after(grammarAccess.getForStatementAccess().getForeachcommandAssignment_3_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__IdentifierDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierDeclaration__Group__0__Impl
	rule__IdentifierDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getNameAssignment_0()); }
(rule__IdentifierDeclaration__NameAssignment_0)
{ after(grammarAccess.getIdentifierDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierDeclaration__Group__1__Impl
	rule__IdentifierDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getRelationAssignment_1()); }
(rule__IdentifierDeclaration__RelationAssignment_1)?
{ after(grammarAccess.getIdentifierDeclarationAccess().getRelationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getGroup_2()); }
(rule__IdentifierDeclaration__Group_2__0)?
{ after(grammarAccess.getIdentifierDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IdentifierDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierDeclaration__Group_2__0__Impl
	rule__IdentifierDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getIdentifierDeclarationAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getExprAssignment_2_1()); }
(rule__IdentifierDeclaration__ExprAssignment_2_1)
{ after(grammarAccess.getIdentifierDeclarationAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommaExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaExpr__Group__0__Impl
	rule__CommaExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaExprAccess().getElementsAssignment_0()); }
(rule__CommaExpr__ElementsAssignment_0)
{ after(grammarAccess.getCommaExprAccess().getElementsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommaExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaExprAccess().getGroup_1()); }
(rule__CommaExpr__Group_1__0)*
{ after(grammarAccess.getCommaExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommaExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaExpr__Group_1__0__Impl
	rule__CommaExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaExprAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getCommaExprAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommaExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommaExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommaExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaExprAccess().getElementsAssignment_1_1()); }
(rule__CommaExpr__ElementsAssignment_1_1)
{ after(grammarAccess.getCommaExprAccess().getElementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoWhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileStatement__Group__0__Impl
	rule__DoWhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getWhileAction_0()); }
(

)
{ after(grammarAccess.getDoWhileStatementAccess().getWhileAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileStatement__Group__1__Impl
	rule__DoWhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getDoWhileStatementAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileStatement__Group__2__Impl
	rule__DoWhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getWhileBlockAssignment_2()); }
(rule__DoWhileStatement__WhileBlockAssignment_2)
{ after(grammarAccess.getDoWhileStatementAccess().getWhileBlockAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileStatement__Group__3__Impl
	rule__DoWhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getWhileKeyword_3()); }

	'while' 

{ after(grammarAccess.getDoWhileStatementAccess().getWhileKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileStatement__Group__4__Impl
	rule__DoWhileStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getCondAssignment_4()); }
(rule__DoWhileStatement__CondAssignment_4)
{ after(grammarAccess.getDoWhileStatementAccess().getCondAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWhileStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWhileStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getDoWhileStatementAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileAction_0()); }
(

)
{ after(grammarAccess.getWhileStatementAccess().getWhileAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_1()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getCondAssignment_2()); }
(rule__WhileStatement__CondAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_3()); }
(rule__WhileStatement__WhileBlockAssignment_3)
{ after(grammarAccess.getWhileStatementAccess().getWhileBlockAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SwitchStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchAction_0()); }
(

)
{ after(grammarAccess.getSwitchStatementAccess().getSwitchAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_1()); }

	'switch' 

{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCondAssignment_2()); }
(rule__SwitchStatement__CondAssignment_2)
{ after(grammarAccess.getSwitchStatementAccess().getCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCasesAssignment_4()); }
(rule__SwitchStatement__CasesAssignment_4)*
{ after(grammarAccess.getSwitchStatementAccess().getCasesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ParenthesizedExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpr__Group__0__Impl
	rule__ParenthesizedExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExprAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExprAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpr__Group__1__Impl
	rule__ParenthesizedExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExprAccess().getExpressionAssignment_1()); }
(rule__ParenthesizedExpr__ExpressionAssignment_1)
{ after(grammarAccess.getParenthesizedExprAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExprAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExprAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementInSwitch__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementInSwitch__Group_1__0__Impl
	rule__StatementInSwitch__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementInSwitch__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementInSwitchAccess().getCaseKeyword_1_0()); }

	'case' 

{ after(grammarAccess.getStatementInSwitchAccess().getCaseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementInSwitch__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementInSwitch__Group_1__1__Impl
	rule__StatementInSwitch__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementInSwitch__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementInSwitchAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
{ after(grammarAccess.getStatementInSwitchAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementInSwitch__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementInSwitch__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementInSwitch__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementInSwitchAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getStatementInSwitchAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementInSwitch__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementInSwitch__Group_2__0__Impl
	rule__StatementInSwitch__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementInSwitch__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementInSwitchAccess().getDefaultKeyword_2_0()); }

	'default' 

{ after(grammarAccess.getStatementInSwitchAccess().getDefaultKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementInSwitch__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementInSwitch__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementInSwitch__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementInSwitchAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getStatementInSwitchAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Return__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group__0__Impl
	rule__Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getReturnAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group__1__Impl
	rule__Return__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getExpressionAssignment_1()); }
(rule__Return__ExpressionAssignment_1)
{ after(grammarAccess.getReturnAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAccessAssignment_0()); }
(rule__VariableDeclaration__AccessAssignment_0)?
{ after(grammarAccess.getVariableDeclarationAccess().getAccessAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getStaticKeyword_1()); }
(
	'static' 
)?
{ after(grammarAccess.getVariableDeclarationAccess().getStaticKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_2()); }

	'var' 

{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_3()); }
(rule__VariableDeclaration__NameAssignment_3)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__4__Impl
	rule__VariableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__5__Impl
	rule__VariableDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_5()); }
(rule__VariableDeclaration__TypeAssignment_5)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__6__Impl
	rule__VariableDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup_6()); }
(rule__VariableDeclaration__Group_6__0)?
{ after(grammarAccess.getVariableDeclarationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__VariableDeclaration__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_6__0__Impl
	rule__VariableDeclaration__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_6_0()); }

	'=' 

{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_6_1()); }
(rule__VariableDeclaration__ExpressionAssignment_6_1)
{ after(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionAssignment_2()); }
(rule__IfStatement__ExpressionAssignment_2)
{ after(grammarAccess.getIfStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenBlockAssignment_4()); }
(rule__IfStatement__ThenBlockAssignment_4)
{ after(grammarAccess.getIfStatementAccess().getThenBlockAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
(rule__IfStatement__Group_5__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfStatementAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseBlockAssignment_5_1()); }
(rule__IfStatement__ElseBlockAssignment_5_1)
{ after(grammarAccess.getIfStatementAccess().getElseBlockAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TryStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__0__Impl
	rule__TryStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getTryKeyword_0()); }

	'try' 

{ after(grammarAccess.getTryStatementAccess().getTryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__1__Impl
	rule__TryStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTryStatementAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__2__Impl
	rule__TryStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTryStatementAccess().getStatementsAssignment_2()); }
(rule__TryStatement__StatementsAssignment_2)
{ after(grammarAccess.getTryStatementAccess().getStatementsAssignment_2()); }
)
(
{ before(grammarAccess.getTryStatementAccess().getStatementsAssignment_2()); }
(rule__TryStatement__StatementsAssignment_2)*
{ after(grammarAccess.getTryStatementAccess().getStatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__3__Impl
	rule__TryStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getTryStatementAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__4__Impl
	rule__TryStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_4()); }
(rule__TryStatement__Group_4__0)?
{ after(grammarAccess.getTryStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getGroup_5()); }
(rule__TryStatement__Group_5__0)?
{ after(grammarAccess.getTryStatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TryStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_4__0__Impl
	rule__TryStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getCatchKeyword_4_0()); }

	'catch' 

{ after(grammarAccess.getTryStatementAccess().getCatchKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_4__1__Impl
	rule__TryStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_4_1()); }

	'(' 

{ after(grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_4__2__Impl
	rule__TryStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getParamsAssignment_4_2()); }
(rule__TryStatement__ParamsAssignment_4_2)
{ after(grammarAccess.getTryStatementAccess().getParamsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_4_3()); }

	')' 

{ after(grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TryStatement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_5__0__Impl
	rule__TryStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyKeyword_5_0()); }

	'finally' 

{ after(grammarAccess.getTryStatementAccess().getFinallyKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TryStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyBlockAssignment_5_1()); }
(rule__TryStatement__FinallyBlockAssignment_5_1)
{ after(grammarAccess.getTryStatementAccess().getFinallyBlockAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementsBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementsBlock__Group__0__Impl
	rule__StatementsBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementsBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsBlockAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getStatementsBlockAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementsBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementsBlock__Group__1__Impl
	rule__StatementsBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementsBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsBlockAccess().getStatementsAssignment_1()); }
(rule__StatementsBlock__StatementsAssignment_1)*
{ after(grammarAccess.getStatementsBlockAccess().getStatementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementsBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementsBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementsBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsBlockAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getStatementsBlockAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getConstKeyword_0()); }
(
	'const' 
)?
{ after(grammarAccess.getParameterAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRelAssignment_2()); }
(rule__Parameter__RelAssignment_2)?
{ after(grammarAccess.getParameterAccess().getRelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_3()); }
(rule__Parameter__Group_3__0)?
{ after(grammarAccess.getParameterAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parameter__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__0__Impl
	rule__Parameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLitAssignment_3_1()); }
(rule__Parameter__LitAssignment_3_1)
{ after(grammarAccess.getParameterAccess().getLitAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameters__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_0__0__Impl
	rule__Parameters__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsAssignment_0_0()); }
(rule__Parameters__ElementsAssignment_0_0)
{ after(grammarAccess.getParametersAccess().getElementsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getGroup_0_1()); }
(rule__Parameters__Group_0_1__0)*
{ after(grammarAccess.getParametersAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameters__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_0_1__0__Impl
	rule__Parameters__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getParametersAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsAssignment_0_1_1()); }
(rule__Parameters__ElementsAssignment_0_1_1)
{ after(grammarAccess.getParametersAccess().getElementsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameters__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1__0__Impl
	rule__Parameters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getGroup_1_0()); }
(rule__Parameters__Group_1_0__0)?
{ after(grammarAccess.getParametersAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1__1__Impl
	rule__Parameters__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getNameAssignment_1_1()); }
(rule__Parameters__NameAssignment_1_1)
{ after(grammarAccess.getParametersAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getRelAssignment_1_2()); }
(rule__Parameters__RelAssignment_1_2)?
{ after(grammarAccess.getParametersAccess().getRelAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameters__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1_0__0__Impl
	rule__Parameters__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsAssignment_1_0_0()); }
(rule__Parameters__ElementsAssignment_1_0_0)
{ after(grammarAccess.getParametersAccess().getElementsAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1_0__1__Impl
	rule__Parameters__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getGroup_1_0_1()); }
(rule__Parameters__Group_1_0_1__0)*
{ after(grammarAccess.getParametersAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getCommaKeyword_1_0_2()); }

	',' 

{ after(grammarAccess.getParametersAccess().getCommaKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameters__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1_0_1__0__Impl
	rule__Parameters__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getCommaKeyword_1_0_1_0()); }

	',' 

{ after(grammarAccess.getParametersAccess().getCommaKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameters__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsAssignment_1_0_1_1()); }
(rule__Parameters__ElementsAssignment_1_0_1_1)
{ after(grammarAccess.getParametersAccess().getElementsAssignment_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRelation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRelation__Group__0__Impl
	rule__TypeRelation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRelation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRelationAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getTypeRelationAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRelation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRelation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRelation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRelationAccess().getTypeAssignment_1()); }
(rule__TypeRelation__TypeAssignment_1)
{ after(grammarAccess.getTypeRelationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__0__Impl
	rule__ObjectLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getObjectLiteralAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__1__Impl
	rule__ObjectLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getObjectFieldsParserRuleCall_1()); }
	ruleobjectFields
{ after(grammarAccess.getObjectLiteralAccess().getObjectFieldsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getObjectLiteralAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectFields__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectFields__Group__0__Impl
	rule__ObjectFields__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFields__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldsAccess().getFieldsAssignment_0()); }
(rule__ObjectFields__FieldsAssignment_0)
{ after(grammarAccess.getObjectFieldsAccess().getFieldsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectFields__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectFields__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFields__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldsAccess().getGroup_1()); }
(rule__ObjectFields__Group_1__0)*
{ after(grammarAccess.getObjectFieldsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectFields__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectFields__Group_1__0__Impl
	rule__ObjectFields__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFields__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getObjectFieldsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectFields__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectFields__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFields__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldsAccess().getFieldsAssignment_1_1()); }
(rule__ObjectFields__FieldsAssignment_1_1)
{ after(grammarAccess.getObjectFieldsAccess().getFieldsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectField__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_0__0__Impl
	rule__ObjectField__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getObjectFieldAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_0__1__Impl
	rule__ObjectField__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getObjectFieldAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getExprOrObjectLiteralParserRuleCall_0_2()); }
	ruleexprOrObjectLiteral
{ after(grammarAccess.getObjectFieldAccess().getExprOrObjectLiteralParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectField__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_1__0__Impl
	rule__ObjectField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING
{ after(grammarAccess.getObjectFieldAccess().getSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_1__1__Impl
	rule__ObjectField__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getObjectFieldAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getExprOrObjectLiteralParserRuleCall_1_2()); }
	ruleexprOrObjectLiteral
{ after(grammarAccess.getObjectFieldAccess().getExprOrObjectLiteralParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectField__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_2__0__Impl
	rule__ObjectField__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getINTTerminalRuleCall_2_0()); }
	RULE_INT
{ after(grammarAccess.getObjectFieldAccess().getINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_2__1__Impl
	rule__ObjectField__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getObjectFieldAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectField__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectField__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectField__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldAccess().getExprOrObjectLiteralParserRuleCall_2_2()); }
	ruleexprOrObjectLiteral
{ after(grammarAccess.getObjectFieldAccess().getExprOrObjectLiteralParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getSelectionExpressionParserRuleCall_0()); }
	ruleSelectionExpression
{ after(grammarAccess.getAssignmentAccess().getSelectionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
(rule__Assignment__Group_1__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__1__Impl
	rule__Assignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignment_1_2()); }
(rule__Assignment__RightAssignment_1_2)
{ after(grammarAccess.getAssignmentAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group__0__Impl
	rule__SelectionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getSelectionExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getGroup_1()); }
(rule__SelectionExpression__Group_1__0)*
{ after(grammarAccess.getSelectionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1__0__Impl
	rule__SelectionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getMemberSelectionReceiverAction_1_0()); }
(

)
{ after(grammarAccess.getSelectionExpressionAccess().getMemberSelectionReceiverAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1__1__Impl
	rule__SelectionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getSelectionExpressionAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1__2__Impl
	rule__SelectionExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getMemberAssignment_1_2()); }
(rule__SelectionExpression__MemberAssignment_1_2)
{ after(grammarAccess.getSelectionExpressionAccess().getMemberAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getGroup_1_3()); }
(rule__SelectionExpression__Group_1_3__0)?
{ after(grammarAccess.getSelectionExpressionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SelectionExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3__0__Impl
	rule__SelectionExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getMethodinvocationAssignment_1_3_0()); }
(rule__SelectionExpression__MethodinvocationAssignment_1_3_0)
{ after(grammarAccess.getSelectionExpressionAccess().getMethodinvocationAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3__1__Impl
	rule__SelectionExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getGroup_1_3_1()); }
(rule__SelectionExpression__Group_1_3_1__0)?
{ after(grammarAccess.getSelectionExpressionAccess().getGroup_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getRightParenthesisKeyword_1_3_2()); }

	')' 

{ after(grammarAccess.getSelectionExpressionAccess().getRightParenthesisKeyword_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelectionExpression__Group_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3_1__0__Impl
	rule__SelectionExpression__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getArgsAssignment_1_3_1_0()); }
(rule__SelectionExpression__ArgsAssignment_1_3_1_0)
{ after(grammarAccess.getSelectionExpressionAccess().getArgsAssignment_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getGroup_1_3_1_1()); }
(rule__SelectionExpression__Group_1_3_1_1__0)*
{ after(grammarAccess.getSelectionExpressionAccess().getGroup_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelectionExpression__Group_1_3_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3_1_1__0__Impl
	rule__SelectionExpression__Group_1_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getCommaKeyword_1_3_1_1_0()); }

	',' 

{ after(grammarAccess.getSelectionExpressionAccess().getCommaKeyword_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelectionExpression__Group_1_3_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelectionExpression__Group_1_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__Group_1_3_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getArgsAssignment_1_3_1_1_1()); }
(rule__SelectionExpression__ArgsAssignment_1_3_1_1_1)
{ after(grammarAccess.getSelectionExpressionAccess().getArgsAssignment_1_3_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getStringConstantAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getStringConstantAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
(rule__TerminalExpression__ValueAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntConstantAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getIntConstantAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
(rule__TerminalExpression__ValueAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBoolConstantAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getBoolConstantAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
(rule__TerminalExpression__ValueAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getThisAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getThisAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getThisKeyword_3_1()); }

	'this' 

{ after(grammarAccess.getTerminalExpressionAccess().getThisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSuperAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getSuperAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSuperKeyword_4_1()); }

	'super' 

{ after(grammarAccess.getTerminalExpressionAccess().getSuperKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_5__0__Impl
	rule__TerminalExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNullAction_5_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getNullAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNullKeyword_5_1()); }

	'null' 

{ after(grammarAccess.getTerminalExpressionAccess().getNullKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_6__0__Impl
	rule__TerminalExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getVoidAction_6_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getVoidAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getVoidKeyword_6_1()); }

	'void' 

{ after(grammarAccess.getTerminalExpressionAccess().getVoidKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_7__0__Impl
	rule__TerminalExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSymbolRefAction_7_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getSymbolRefAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSymbolAssignment_7_1()); }
(rule__TerminalExpression__SymbolAssignment_7_1)
{ after(grammarAccess.getTerminalExpressionAccess().getSymbolAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_8__0__Impl
	rule__TerminalExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getTerminalOpAction_8_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getTerminalOpAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getTerminalOperatorParserRuleCall_8_1()); }
	ruleTerminalOperator
{ after(grammarAccess.getTerminalExpressionAccess().getTerminalOperatorParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_9__0__Impl
	rule__TerminalExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_9_0()); }

	'(' 

{ after(grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_9__1__Impl
	rule__TerminalExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionParserRuleCall_9_1()); }
	ruleExpression
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_9_2()); }

	')' 

{ after(grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ImpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImpImportsParserRuleCall_1_0_0()); }
	ruleImports{ after(grammarAccess.getModelAccess().getImpImportsParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ClassesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClassesClassParserRuleCall_1_1_0()); }
	ruleClass{ after(grammarAccess.getModelAccess().getClassesClassParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__PackageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageAccess().getPackageQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ImpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getImpImportsParserRuleCall_3_0()); }
	ruleImports{ after(grammarAccess.getPackageAccess().getImpImportsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__DirectivesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getDirectivesDirectiveParserRuleCall_4_0()); }
	ruledirective{ after(grammarAccess.getPackageAccess().getDirectivesDirectiveParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ClassesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getClassesAlternatives_5_0()); }
(rule__Package__ClassesAlternatives_5_0)
{ after(grammarAccess.getPackageAccess().getClassesAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getImportsAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__NameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getNameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getDirectiveAccess().getNameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Directive__AnnonFieldsAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectiveAccess().getAnnonFieldsAnnotationFieldsParserRuleCall_0_3_1_0()); }
	ruleannotationFields{ after(grammarAccess.getDirectiveAccess().getAnnonFieldsAnnotationFieldsParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUsesAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Uses__TypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUsesAccess().getTypeQualifiedNameParserRuleCall_2_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getUsesAccess().getTypeQualifiedNameParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationFields__AnoonFieldsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getAnoonFieldsAnnotationFieldParserRuleCall_0_0()); }
	ruleannotationField{ after(grammarAccess.getAnnotationFieldsAccess().getAnoonFieldsAnnotationFieldParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationFields__AnnonFieldsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldsAccess().getAnnonFieldsAnnotationFieldParserRuleCall_1_1_0()); }
	ruleannotationField{ after(grammarAccess.getAnnotationFieldsAccess().getAnnonFieldsAnnotationFieldParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationField__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationFieldAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationField__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationFieldAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAnnotationFieldAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AccessAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getAccessAccessLevelEnumRuleCall_0_0()); }
	ruleAccessLevel{ after(grammarAccess.getInterfaceAccess().getAccessAccessLevelEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__SuperclassAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getSuperclassTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getInterfaceAccess().getSuperclassTypeIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getInterfaceAccess().getSuperclassTypeIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getInterfaceAccess().getSuperclassTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__MembersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_5_0()); }
	ruleMember{ after(grammarAccess.getInterfaceAccess().getMembersMemberParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AccessAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAccessAccessLevelEnumRuleCall_0_0()); }
	ruleAccessLevel{ after(grammarAccess.getClassAccess().getAccessAccessLevelEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__SuperTypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getSuperTypeClassCrossReference_4_1_0()); }
(
{ before(grammarAccess.getClassAccess().getSuperTypeClassIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getSuperTypeClassIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getSuperTypeClassCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__TypesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypesInterfaceCrossReference_5_1_0()); }
(
{ before(grammarAccess.getClassAccess().getTypesInterfaceIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getTypesInterfaceIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getTypesInterfaceCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__TypesAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getTypesInterfaceCrossReference_5_2_1_0()); }
(
{ before(grammarAccess.getClassAccess().getTypesInterfaceIDTerminalRuleCall_5_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getTypesInterfaceIDTerminalRuleCall_5_2_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getTypesInterfaceCrossReference_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__MembersAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_7_0()); }
	ruleMember{ after(grammarAccess.getClassAccess().getMembersMemberParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getVarVariableDeclarationParserRuleCall_0_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getMemberAccess().getVarVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__MethAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getMethMethodParserRuleCall_1_0()); }
	ruleMethod{ after(grammarAccess.getMemberAccess().getMethMethodParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__AccessAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAccessAccessLevelEnumRuleCall_1_0()); }
	ruleAccessLevel{ after(grammarAccess.getMethodAccess().getAccessAccessLevelEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_6_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_8_0_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_8_1_1_0()); }
	ruleParameter{ after(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeTypeCrossReference_10_1_0()); }
(
{ before(grammarAccess.getMethodAccess().getTypeTypeIDTerminalRuleCall_10_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getTypeTypeIDTerminalRuleCall_10_1_0_1()); }
)
{ after(grammarAccess.getMethodAccess().getTypeTypeCrossReference_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyMethodBodyParserRuleCall_11_0()); }
	ruleMethodBody{ after(grammarAccess.getMethodAccess().getBodyMethodBodyParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodBody__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodBodyAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getMethodBodyAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getTypeTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getNewStatementAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getNewStatementAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getNewStatementAccess().getTypeTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewStatement__ParamAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewStatementAccess().getParamParametersParserRuleCall_3_1_0()); }
	ruleParameters{ after(grammarAccess.getNewStatementAccess().getParamParametersParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForinitAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForinitCommaExprParserRuleCall_0_2_0()); }
	rulecommaExpr{ after(grammarAccess.getForStatementAccess().getForinitCommaExprParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ConditionAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getConditionCommaExprParserRuleCall_0_4_0()); }
	rulecommaExpr{ after(grammarAccess.getForStatementAccess().getConditionCommaExprParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__IteratorAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIteratorCommaExprParserRuleCall_0_6_0()); }
	rulecommaExpr{ after(grammarAccess.getForStatementAccess().getIteratorCommaExprParserRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__CommandAssignment_0_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCommandStatementsBlockParserRuleCall_0_8_0()); }
	ruleStatementsBlock{ after(grammarAccess.getForStatementAccess().getCommandStatementsBlockParserRuleCall_0_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ElementsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getElementsIdentifierDeclarationParserRuleCall_1_3_0()); }
	ruleidentifierDeclaration{ after(grammarAccess.getForStatementAccess().getElementsIdentifierDeclarationParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ElementsAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getElementsIdentifierDeclarationParserRuleCall_1_4_1_0()); }
	ruleidentifierDeclaration{ after(grammarAccess.getForStatementAccess().getElementsIdentifierDeclarationParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ConditionAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getConditionCommaExprParserRuleCall_1_6_0()); }
	rulecommaExpr{ after(grammarAccess.getForStatementAccess().getConditionCommaExprParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__IteratorAssignment_1_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getIteratorCommaExprParserRuleCall_1_8_0()); }
	rulecommaExpr{ after(grammarAccess.getForStatementAccess().getIteratorCommaExprParserRuleCall_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__CommandAssignment_1_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCommandStatementsBlockParserRuleCall_1_10_0()); }
	ruleStatementsBlock{ after(grammarAccess.getForStatementAccess().getCommandStatementsBlockParserRuleCall_1_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__NameForinAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getNameForinIDTerminalRuleCall_2_3_0()); }
	RULE_ID{ after(grammarAccess.getForStatementAccess().getNameForinIDTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForinexprAssignment_2_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForinexprExpressionParserRuleCall_2_5_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getForinexprExpressionParserRuleCall_2_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForcommandAssignment_2_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForcommandStatementsBlockParserRuleCall_2_7_0()); }
	ruleStatementsBlock{ after(grammarAccess.getForStatementAccess().getForcommandStatementsBlockParserRuleCall_2_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__NameForeachhAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getNameForeachhIDTerminalRuleCall_3_4_0()); }
	RULE_ID{ after(grammarAccess.getForStatementAccess().getNameForeachhIDTerminalRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__RelationAssignment_3_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRelationTypeRelationParserRuleCall_3_5_0()); }
	ruletypeRelation{ after(grammarAccess.getForStatementAccess().getRelationTypeRelationParserRuleCall_3_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForeachexprAssignment_3_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForeachexprExpressionParserRuleCall_3_7_0()); }
	ruleExpression{ after(grammarAccess.getForStatementAccess().getForeachexprExpressionParserRuleCall_3_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForeachcommandAssignment_3_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForeachcommandStatementsBlockParserRuleCall_3_9_0()); }
	ruleStatementsBlock{ after(grammarAccess.getForStatementAccess().getForeachcommandStatementsBlockParserRuleCall_3_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIdentifierDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__RelationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getRelationTypeRelationParserRuleCall_1_0()); }
	ruletypeRelation{ after(grammarAccess.getIdentifierDeclarationAccess().getRelationTypeRelationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierDeclaration__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierDeclarationAccess().getExprExprOrObjectLiteralParserRuleCall_2_1_0()); }
	ruleexprOrObjectLiteral{ after(grammarAccess.getIdentifierDeclarationAccess().getExprExprOrObjectLiteralParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommaExpr__ElementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaExprAccess().getElementsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getCommaExprAccess().getElementsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommaExpr__ElementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaExprAccess().getElementsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getCommaExprAccess().getElementsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__WhileBlockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getWhileBlockStatementsBlockParserRuleCall_2_0()); }
	ruleStatementsBlock{ after(grammarAccess.getDoWhileStatementAccess().getWhileBlockStatementsBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWhileStatement__CondAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWhileStatementAccess().getCondParenthesizedExprParserRuleCall_4_0()); }
	ruleparenthesizedExpr{ after(grammarAccess.getDoWhileStatementAccess().getCondParenthesizedExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getCondParenthesizedExprParserRuleCall_2_0()); }
	ruleparenthesizedExpr{ after(grammarAccess.getWhileStatementAccess().getCondParenthesizedExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__WhileBlockAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileBlockStatementsBlockParserRuleCall_3_0()); }
	ruleStatementsBlock{ after(grammarAccess.getWhileStatementAccess().getWhileBlockStatementsBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__CondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCondParenthesizedExprParserRuleCall_2_0()); }
	ruleparenthesizedExpr{ after(grammarAccess.getSwitchStatementAccess().getCondParenthesizedExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__CasesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getCasesStatementInSwitchParserRuleCall_4_0()); }
	rulestatementInSwitch{ after(grammarAccess.getSwitchStatementAccess().getCasesStatementInSwitchParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpr__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExprAccess().getExpressionExprOrObjectLiteralParserRuleCall_1_0()); }
	ruleexprOrObjectLiteral{ after(grammarAccess.getParenthesizedExprAccess().getExpressionExprOrObjectLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__AccessAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getAccessAccessLevelEnumRuleCall_0_0()); }
	ruleAccessLevel{ after(grammarAccess.getVariableDeclarationAccess().getAccessAccessLevelEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeCrossReference_5_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getTypeTypeIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getVariableDeclarationAccess().getTypeTypeCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExpressionAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenBlockAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getThenBlockIfBlockParserRuleCall_4_0()); }
	ruleIfBlock{ after(grammarAccess.getIfStatementAccess().getThenBlockIfBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseBlockAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseBlockIfBlockParserRuleCall_5_1_0()); }
	ruleIfBlock{ after(grammarAccess.getIfStatementAccess().getElseBlockIfBlockParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getTryStatementAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__ParamsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getParamsParameterParserRuleCall_4_2_0()); }
	ruleParameter{ after(grammarAccess.getTryStatementAccess().getParamsParameterParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__FinallyBlockAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTryStatementAccess().getFinallyBlockStatementsBlockParserRuleCall_5_1_0()); }
	ruleStatementsBlock{ after(grammarAccess.getTryStatementAccess().getFinallyBlockStatementsBlockParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfBlock__StatementsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfBlockAccess().getStatementsStatementParserRuleCall_0_0()); }
	ruleStatement{ after(grammarAccess.getIfBlockAccess().getStatementsStatementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementsBlock__StatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementsBlockAccess().getStatementsStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getStatementsBlockAccess().getStatementsStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__RelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRelTypeRelationParserRuleCall_2_0()); }
	ruletypeRelation{ after(grammarAccess.getParameterAccess().getRelTypeRelationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__LitAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLitExprOrObjectLiteralParserRuleCall_3_1_0()); }
	ruleexprOrObjectLiteral{ after(grammarAccess.getParameterAccess().getLitExprOrObjectLiteralParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_0_0_0()); }
	ruleParameter{ after(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_0_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_1_0_0_0()); }
	ruleParameter{ after(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ElementsAssignment_1_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_1_0_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParametersAccess().getElementsParameterParserRuleCall_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getParametersAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__RelAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParametersAccess().getRelTypeRelationParserRuleCall_1_2_0()); }
	ruletypeRelation{ after(grammarAccess.getParametersAccess().getRelTypeRelationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRelation__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRelationAccess().getTypeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getTypeRelationAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeRelationAccess().getTypeTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTypeRelationAccess().getTypeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFields__FieldsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldsAccess().getFieldsObjectFieldParserRuleCall_0_0()); }
	ruleobjectField{ after(grammarAccess.getObjectFieldsAccess().getFieldsObjectFieldParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectFields__FieldsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectFieldsAccess().getFieldsObjectFieldParserRuleCall_1_1_0()); }
	ruleobjectField{ after(grammarAccess.getObjectFieldsAccess().getFieldsObjectFieldParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getRightExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__MemberAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getMemberMemberCrossReference_1_2_0()); }
(
{ before(grammarAccess.getSelectionExpressionAccess().getMemberMemberIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSelectionExpressionAccess().getMemberMemberIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getSelectionExpressionAccess().getMemberMemberCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__MethodinvocationAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_3_0_0()); }
(
{ before(grammarAccess.getSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_3_0_0()); }
)

{ after(grammarAccess.getSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__ArgsAssignment_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getArgsExpressionParserRuleCall_1_3_1_0_0()); }
	ruleExpression{ after(grammarAccess.getSelectionExpressionAccess().getArgsExpressionParserRuleCall_1_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionExpression__ArgsAssignment_1_3_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionExpressionAccess().getArgsExpressionParserRuleCall_1_3_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSelectionExpressionAccess().getArgsExpressionParserRuleCall_1_3_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getTerminalExpressionAccess().getValueINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getValueAlternatives_2_1_0()); }
(rule__TerminalExpression__ValueAlternatives_2_1_0)
{ after(grammarAccess.getTerminalExpressionAccess().getValueAlternatives_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__SymbolAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSymbolSymbolCrossReference_7_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getSymbolSymbolIDTerminalRuleCall_7_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExpressionAccess().getSymbolSymbolIDTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getTerminalExpressionAccess().getSymbolSymbolCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



/*
 * Copyright 2013
 *
 * Licensed under the Eclipse Public License version 1.0, available at
 * http://opensource.org/licenses/eclipse-1.0.txt
 */
/*
* generated by Xtext
*/
package de.lynorics.eclipse.jangaroo.ui.labeling

import com.google.inject.Inject
import de.lynorics.eclipse.jangaroo.aS3.Import
import de.lynorics.eclipse.jangaroo.aS3.Method
import de.lynorics.eclipse.jangaroo.aS3.Interface
import java.lang.reflect.AnnotatedElement
import org.eclipse.emf.ecore.EObject
import de.lynorics.eclipse.jangaroo.aS3.Uses
import de.lynorics.eclipse.jangaroo.aS3.Imports

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class AS3LabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
/*
    def text(EObject ele) {
      return ele.class.name + ": " + super.text(ele);
    }
*/
    def image(de.lynorics.eclipse.jangaroo.aS3.Class clas) {
      return "outline-class.gif";
    }

    def image(de.lynorics.eclipse.jangaroo.aS3.Package pack) {
      return "outline-package.gif";
    }

    def image(Interface inter) {
      return "outline-interface.gif";
    }

    def text(Imports imp) {
      return 'import declarations';  
    }
    
    def image(Imports imp) {
      return "outline-imports.gif";
    }

    def image(Import imp) {
      return "outline-import.gif";
    }

    def image(Method meth) {
      return "outline-function-public.gif";
    }

    def text(Uses uses) {
      return 'use declarations';  
    }
    
    def image(Uses uses) {
      return "outline-uses.gif";
    }

}
